{"version":3,"sources":["webpack://@fof/linguist/webpack/bootstrap","webpack://@fof/linguist/external \"flarum.core.compat['app']\"","webpack://@fof/linguist/external \"flarum.core.compat['components/Button']\"","webpack://@fof/linguist/external \"flarum.core.compat['components/Select']\"","webpack://@fof/linguist/external \"flarum.core.compat['Model']\"","webpack://@fof/linguist/external \"flarum.core.compat['utils/extractText']\"","webpack://@fof/linguist/external \"flarum.core.compat['components/Switch']\"","webpack://@fof/linguist/external \"flarum.core.compat['components/Dropdown']\"","webpack://@fof/linguist/external \"flarum.core.compat['components/LoadingModal']\"","webpack://@fof/linguist/external \"flarum.core.compat['components/ExtensionPage']\"","webpack://@fof/linguist/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@fof/linguist/external \"flarum.core.compat['components/Alert']\"","webpack://@fof/linguist/external \"flarum.core.compat['utils/ItemList']\"","webpack://@fof/linguist/external \"flarum.core.compat['helpers/icon']\"","webpack://@fof/linguist/external \"flarum.core.compat['components/LinkButton']\"","webpack://@fof/linguist/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@fof/linguist/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/linguist/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/linguist/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://@fof/linguist/./src/admin/models/StringKey.js","webpack://@fof/linguist/./src/admin/models/TextString.js","webpack://@fof/linguist/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@fof/linguist/./src/admin/utils/localesAsArray.js","webpack://@fof/linguist/./src/admin/utils/highlightMithril.js","webpack://@fof/linguist/./src/admin/components/StringLocale.js","webpack://@fof/linguist/./src/admin/components/StringKey.js","webpack://@fof/linguist/./src/admin/utils/namespaceLabel.js","webpack://@fof/linguist/./src/admin/utils/frontendLabel.js","webpack://@fof/linguist/./src/admin/utils/booleanCheck.js","webpack://@fof/linguist/./src/admin/pages/StringsPage.js","webpack://@fof/linguist/./src/admin/pages/CoveragePage.js","webpack://@fof/linguist/./src/admin/pages/ExportPage.js","webpack://@fof/linguist/./src/admin/pages/ImportPage.js","webpack://@fof/linguist/./src/admin/pages/LinguistPage.js","webpack://@fof/linguist/./src/admin/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_assertThisInitialized","self","ReferenceError","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","_defineProperty","obj","configurable","writable","StringKey","Model","attribute","TextString","apiEndpoint","this","exists","data","id","_extends","assign","target","arguments","length","source","apply","locales","app","push","string","highlight","lowercaseHighliht","toLowerCase","regex","RegExp","replace","HIGHLIGHT_DELIMITER","split","map","text","StringLocale","oninit","vnode","stringKey","attrs","locale","localeKey","originalString","store","all","find","dirty","processing","originalHasNewLine","keys","some","indexOf","inputType","view","placeholderText","translator","trans","localeName","className","title","oninput","event","disabled","highlightMithril","actions","onchange","toArray","items","ItemList","add","Button","component","type","loading","onclick","saveString","deleteString","createRecord","attributes","save","then","redraw","err","localesAsArray","namespace","translation","translations","frontend","operation","booleans","reduce","a","b","StringsPage","numberOfResultsToShow","filters","search","withOwnTranslations","missingTranslationsNegation","missingTranslationsType","missingTranslationsOperation","missingTranslationsInLocales","forExtension","initialBrowseFilters","results","applyFilters","slice","settings","Alert","dismissible","controls","modal","show","LoadingModal","request","method","url","forum","window","location","reload","placeholder","icon","Dropdown","buttonClassName","label","namespaces","extension","extra","namespaceLabel","frontends","frontendLabel","stopPropagation","Select","options","without","with","any","original","own","or","and","filter","strings","getById","confirm","extractText","count","Promise","shown","total","keysWithCustomTranslations","keysWithCustomTranslationsIn","forEach","lowercaseSearch","hasOriginalTranslation","booleanCheck","hasOwnTranslation","matchesType","parts","CoveragePage","columns","showAllFrontends","totalPercent","firstNonEnglishLocale","visibleFrontends","browseWithFilters","localeCoverage","style","prefixCoverage","stringKeys","customCount","originalCount","specialStyle","percent","Math","round","translated","width","max","custom","ExportPage","includeOriginals","includeAll","output","fetchOutput","localeOptions","namespaceOptions","_all","Switch","state","LinkButton","href","exportUrl","external","download","readonly","rows","buildQueryString","extract","raw","JSON","stringify","error","overrideExisting","input","body","ignoreExisting","imported","ignored","identical","LinguistPage","tab","ready","result","pushPayload","sort","extensions","values","packageNameWithDash","content","contentTab","infoItems","LoadingIndicator","ImportPage","ExtensionPage","initializers","models","extensionData","registerPage"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['components/Dropdown'];","module.exports = flarum.core.compat['components/LoadingModal'];","module.exports = flarum.core.compat['components/ExtensionPage'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/Alert'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/LinkButton'];","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import Model from 'flarum/Model';\n\nexport default class StringKey extends Model {\n    key = Model.attribute('key');\n    locales = Model.attribute('locales');\n}\n","import Model from 'flarum/Model';\n\nexport default class TextString extends Model {\n    key = Model.attribute('key');\n    locale = Model.attribute('locale');\n    value = Model.attribute('value');\n\n    apiEndpoint() {\n        return '/fof/linguist/strings' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import app from 'flarum/app';\n\nexport default function () {\n    let locales = [];\n\n    for (let key in app.data.locales) {\n        if (!app.data.locales.hasOwnProperty(key)) {\n            continue;\n        }\n\n        locales.push({\n            key,\n            name: app.data.locales[key],\n        });\n    }\n\n    return locales;\n}\n","/* global m */\n\nconst HIGHLIGHT_DELIMITER = '<fof-highlight>';\n\n// Takes a string and highlight a keyword with a span with mithril template\n// The output will be an array if a keyword is given\nexport default function (string, highlight) {\n    if (!highlight) {\n        return string;\n    }\n\n    const lowercaseHighliht = highlight.toLowerCase();\n\n    // Regex to match the highlighted work in a case-insensitive manner\n    const regex = new RegExp(lowercaseHighliht.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i');\n\n    return string\n        .replace(regex, HIGHLIGHT_DELIMITER + '$&' + HIGHLIGHT_DELIMITER)\n        .split(HIGHLIGHT_DELIMITER)\n        .map(text => {\n            if (text.toLowerCase() === lowercaseHighliht) {\n                return m('span.FoF-Linguist-Highlight', text);\n            }\n\n            return text;\n        });\n}\n","import app from 'flarum/app';\nimport ItemList from 'flarum/utils/ItemList';\nimport Button from 'flarum/components/Button';\nimport highlightMithril from '../utils/highlightMithril';\n\n/* global m */\n\nexport default class StringLocale {\n    oninit(vnode) {\n        this.stringKey = vnode.attrs.stringKey;\n        this.locale = vnode.attrs.locale;\n        this.localeKey = this.locale ? this.locale.key : null;\n        this.originalString = this.localeKey && this.stringKey.locales().hasOwnProperty(this.localeKey) ? this.stringKey.locales()[this.localeKey] : null;\n\n        this.string = app.store.all('fof-linguist-string').find(\n            string => string.key() === this.stringKey.key() && string.locale() === this.localeKey\n        );\n\n        this.value = this.string ? this.string.value() : '';\n        this.dirty = false;\n        this.processing = false;\n\n        // We check whether any original translation in any language has a newline\n        // By not hard-coding to English, this should work pretty well even if the fallback locale is modified,\n        // or if a text happens to not be available in the fallback language\n        const originalHasNewLine = Object.keys(this.stringKey.locales()).some(key => this.stringKey.locales()[key].indexOf('\\n') !== -1);\n\n        this.inputType = 'input';\n\n        // We will enable multi-line editing if the original has a newline, or if the current custom value already has one\n        if (originalHasNewLine || this.value.indexOf('\\n') !== -1) {\n            this.inputType = 'textarea';\n        }\n    }\n\n    view(vnode) {\n        const placeholderText = this.originalString ? this.originalString : '(' + app.translator.trans('fof-linguist.admin.placeholder.' + (this.localeKey ? 'not-translated' : 'all-locales')) + ')';\n\n        return m('.FoF-Linguist-Locale', [\n            m('label.FoF-Linguist-Label', this.localeName()),\n            m('.FoF-Linguist-Field', {\n                className: (this.value ? 'FoF-Linguist-Field--with-value' : '') + (this.originalString ? ' FoF-Linguist-Field--with-original-string' : ''),\n                title: placeholderText,\n            }, [\n                m('.FoF-Linguist-Field-Wrap', [\n                    m(this.inputType, {\n                        className: 'FormControl FoF-Linguist-Input',\n                        value: this.value,\n                        oninput: event => {\n                            this.value = event.target.value;\n                            this.dirty = true;\n\n                            // Remove dirty state if the user erased his text without saving\n                            if (!this.value && !this.string) {\n                                this.dirty = false;\n                            }\n                        },\n                        disabled: this.processing,\n                    }),\n                    m('.FoF-Linguist-Placeholder', [\n                        m('span.FoF-Linguist-Placeholder-Hint', app.translator.trans('fof-linguist.admin.placeholder.hint')),\n                        ' ',\n                        m('span', this.originalString ? highlightMithril(placeholderText, vnode.attrs.highlight) : placeholderText),\n                    ]),\n                ]),\n            ]),\n            m('.FoF-Linguist-Controls', this.actions(vnode.attrs.onchange).toArray()),\n        ]);\n    }\n\n    localeName() {\n        if (this.locale) {\n            return [this.locale.name + ' (', m('code', this.locale.key), ')'];\n        } else {\n            return app.translator.trans('fof-linguist.admin.locales.all');\n        }\n    }\n\n    actions(onchange) {\n        const items = new ItemList();\n\n        items.add('apply', Button.component({\n            type: 'button',\n            className: 'Button Button--primary',\n            loading: this.processing,\n            disabled: !this.dirty,\n            onclick: () => {\n                this.saveString(onchange);\n            },\n        }, app.translator.trans('fof-linguist.admin.buttons.apply')));\n\n        items.add('reset', Button.component({\n            type: 'button',\n            className: 'Button',\n            loading: this.processing,\n            disabled: !this.dirty && !this.string,\n            onclick: () => {\n                this.deleteString(onchange);\n            },\n        }, app.translator.trans('fof-linguist.admin.buttons.reset')));\n\n        if (this.originalString) {\n            items.add('copy-original', Button.component({\n                type: 'button',\n                className: 'Button',\n                loading: this.processing,\n                onclick: () => {\n                    this.value = this.originalString;\n                    this.dirty = true;\n                },\n            }, app.translator.trans('fof-linguist.admin.buttons.copy-original')));\n        }\n\n        return items;\n    }\n\n    saveString(onchange) {\n        if (!this.value) {\n            this.deleteString(onchange);\n\n            return;\n        }\n\n        if (!this.string) {\n            this.string = app.store.createRecord('fof-linguist-string', {\n                attributes: {\n                    key: this.stringKey.key(),\n                    locale: this.localeKey,\n                    value: '',\n                },\n            });\n        }\n\n        this.string.data.attributes.value = this.value;\n\n        if (!this.string.locale()) delete this.string.data.attributes.locale;\n\n        this.processing = true;\n\n        this.string.save(this.string.data.attributes).then(() => {\n            this.processing = false;\n            this.dirty = false;\n\n            onchange();\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n\n    deleteString(onchange) {\n        if (this.string) {\n            this.processing = true;\n\n            this.string.delete().then(() => {\n                this.processing = false;\n                this.dirty = false;\n\n                this.string = null;\n                this.value = '';\n\n                onchange();\n\n                m.redraw();\n            }).catch(err => {\n                this.processing = false;\n\n                throw err;\n            });\n        } else {\n            this.value = '';\n            this.dirty = false;\n        }\n    }\n}\n","import StringLocale from '../components/StringLocale';\nimport localesAsArray from '../utils/localesAsArray';\nimport highlightMithril from '../utils/highlightMithril';\n\n/* global m */\n\nexport default class StringKey {\n    view(vnode) {\n        const {\n            stringKey,\n            highlight,\n            onchange,\n        } = vnode.attrs;\n\n        return m('.FoF-Linguist-Key', [\n            m('.FoF-Linguist-Key-Code', m('code', highlightMithril(stringKey.key(), highlight))),\n            m('.FoF-Linguist-Locales', [\n                ...localesAsArray().map(locale => m(StringLocale, {\n                    key: locale.key,\n                    locale,\n                    stringKey,\n                    highlight,\n                    onchange,\n                })),\n                m(StringLocale, {\n                    key: 'all',\n                    locale: null,\n                    stringKey,\n                    highlight,\n                    onchange,\n                }),\n            ]),\n        ]);\n    }\n}\n","import app from 'flarum/app';\n\nexport default function (namespace) {\n    const translation = app.translator.translations['fof-linguist.admin.known-namespace.' + namespace];\n\n    if (translation) {\n        return translation;\n    }\n\n    return namespace;\n}\n","import app from 'flarum/app';\n\nexport default function (frontend) {\n    const translation = app.translator.translations['fof-linguist.admin.known-frontend.' + frontend];\n\n    if (translation) {\n        return translation;\n    }\n\n    return frontend;\n}\n","export default function (operation, booleans) {\n    return booleans.reduce((a, b) => {\n        if (a === 'start') {\n            return b;\n        }\n\n        if (operation === 'or') {\n            return a || b;\n        }\n\n        return a && b;\n    }, 'start');\n}\n","import app from 'flarum/app';\nimport Button from 'flarum/components/Button';\nimport Dropdown from 'flarum/components/Dropdown';\nimport Select from 'flarum/components/Select';\nimport Alert from 'flarum/components/Alert';\nimport LoadingModal from 'flarum/components/LoadingModal';\nimport extractText from 'flarum/utils/extractText';\nimport localesAsArray from '../utils/localesAsArray';\nimport StringKey from '../components/StringKey';\nimport namespaceLabel from '../utils/namespaceLabel';\nimport frontendLabel from '../utils/frontendLabel';\nimport booleanCheck from '../utils/booleanCheck';\n\n/* global m */\n\nconst RESULTS_PER_PAGE = 20;\n\nexport default class StringsPage {\n    oninit(vnode) {\n        this.numberOfResultsToShow = RESULTS_PER_PAGE;\n\n        this.filters = Object.assign({\n            search: '',\n            withOwnTranslations: false,\n            missingTranslationsNegation: 'without',\n            missingTranslationsType: 'any',\n            missingTranslationsOperation: 'or',\n            missingTranslationsInLocales: [],\n            forExtension: null,\n            frontend: null,\n        }, vnode.attrs.initialBrowseFilters || {});\n\n        this.results = [];\n\n        this.applyFilters();\n    }\n\n    view(vnode) {\n        const keys = this.results.slice(0, this.numberOfResultsToShow);\n\n        return [\n            // Additional divs are used to reduce Mithril redraws as much as possible when the conditional components appear\n            m('div', app.data.settings['fof.linguist.should-clear-cache'] === '1' ? Alert.component({\n                dismissible: false,\n                controls: [Button.component({\n                    className: 'Button Button--link',\n                    onclick() {\n                        // Same logic as in core StatusWidget\n                        app.modal.show(LoadingModal);\n\n                        app.request({\n                            method: 'DELETE',\n                            url: app.forum.attribute('apiUrl') + '/cache',\n                        }).then(() => window.location.reload());\n                    },\n                }, app.translator.trans('fof-linguist.admin.clear-cache.button'))],\n            }, app.translator.trans('fof-linguist.admin.clear-cache.text')) : null),\n            m('.FoF-Linguist-Filters', [\n                m('input.FormControl', {\n                    value: this.filters.search,\n                    oninput: event => {\n                        this.filters.search = event.target.value;\n                        this.applyFilters();\n                    },\n                    placeholder: app.translator.trans('fof-linguist.admin.filters.search'),\n                }),\n                Button.component({\n                    className: 'Button' + (this.filters.withOwnTranslations ? ' FoF-Linguist-Filter--Selected' : ''),\n                    icon: `far fa-${this.filters.withOwnTranslations ? 'check-square' : 'square'}`,\n                    onclick: () => {\n                        this.filters.withOwnTranslations = !this.filters.withOwnTranslations;\n                        this.applyFilters();\n                    },\n                }, app.translator.trans('fof-linguist.admin.filters.with-own-translations')),\n                Dropdown.component({\n                    buttonClassName: 'Button' + (this.filters.forExtension ? ' FoF-Linguist-Filter--Selected' : ''),\n                    label: app.translator.trans('fof-linguist.admin.filters.for-extension'),\n                }, vnode.attrs.namespaces.map(\n                    namespace => Button.component({\n                        className: 'Button',\n                        icon: `far fa-${this.filters.forExtension === namespace.namespace ? 'dot-circle' : 'circle'}`,\n                        onclick: () => {\n                            if (this.filters.forExtension === namespace.namespace) {\n                                this.filters.forExtension = null;\n                            } else {\n                                this.filters.forExtension = namespace.namespace;\n                            }\n\n                            this.applyFilters();\n                        },\n                    }, namespace.extension ? namespace.extension.extra['flarum-extension'].title : namespaceLabel(namespace.namespace))\n                )),\n                Dropdown.component({\n                    buttonClassName: 'Button' + (this.filters.frontend ? ' FoF-Linguist-Filter--Selected' : ''),\n                    label: app.translator.trans('fof-linguist.admin.filters.frontend'),\n                }, [\n                    '_all_except_admin',\n                    ...vnode.attrs.frontends,\n                ].map(\n                    frontend => Button.component({\n                        className: 'Button',\n                        icon: `far fa-${this.filters.frontend === frontend ? 'dot-circle' : 'circle'}`,\n                        onclick: () => {\n                            if (this.filters.frontend === frontend) {\n                                this.filters.frontend = null;\n                            } else {\n                                this.filters.frontend = frontend;\n                            }\n\n                            this.applyFilters();\n                        },\n                    }, frontend === '_all_except_admin' ? app.translator.trans('fof-linguist.admin.filters.frontend-all-except-admin') : frontendLabel(frontend))\n                )),\n                Dropdown.component({\n                    buttonClassName: 'Button' + (this.filters.missingTranslationsInLocales.length ? ' FoF-Linguist-Filter--Selected' : ''),\n                    label: app.translator.trans('fof-linguist.admin.filters.missing'),\n                }, [\n                    m('.FoF-Linguist-Missing-Filter', {\n                        onclick(event) {\n                            // Prevent closing the dropdown\n                            event.stopPropagation();\n                        },\n                    }, [\n                        Select.component({\n                            value: this.filters.missingTranslationsNegation,\n                            onchange: value => {\n                                this.filters.missingTranslationsNegation = value;\n\n                                if (this.filters.missingTranslationsInLocales.length) {\n                                    this.applyFilters();\n                                }\n                            },\n                            options: {\n                                without: app.translator.trans('fof-linguist.admin.filters.negation-options.without'),\n                                with: app.translator.trans('fof-linguist.admin.filters.negation-options.with'),\n                            },\n                        }),\n                        Select.component({\n                            value: this.filters.missingTranslationsType,\n                            onchange: value => {\n                                this.filters.missingTranslationsType = value;\n\n                                if (this.filters.missingTranslationsInLocales.length) {\n                                    this.applyFilters();\n                                }\n                            },\n                            options: {\n                                any: app.translator.trans('fof-linguist.admin.filters.type-options.any'),\n                                original: app.translator.trans('fof-linguist.admin.filters.type-options.original'),\n                                own: app.translator.trans('fof-linguist.admin.filters.type-options.own'),\n                            },\n                        }),\n                        m('p', app.translator.trans('fof-linguist.admin.filters.missing-middle-label')),\n                        Select.component({\n                            value: this.filters.missingTranslationsOperation,\n                            onchange: value => {\n                                this.filters.missingTranslationsOperation = value;\n\n                                if (this.filters.missingTranslationsInLocales.length) {\n                                    this.applyFilters();\n                                }\n                            },\n                            options: {\n                                or: app.translator.trans('fof-linguist.admin.filters.operation-options.or'),\n                                and: app.translator.trans('fof-linguist.admin.filters.operation-options.and'),\n                            },\n                        }),\n                    ]),\n                    ...localesAsArray().map(\n                        locale => Button.component({\n                            className: 'Button',\n                            icon: `far fa-${this.filters.missingTranslationsInLocales.indexOf(locale.key) !== -1 ? 'check-square' : 'square'}`,\n                            onclick: () => {\n                                if (this.filters.missingTranslationsInLocales.indexOf(locale.key) !== -1) {\n                                    this.filters.missingTranslationsInLocales = this.filters.missingTranslationsInLocales.filter(key => key !== locale.key);\n                                } else {\n                                    this.filters.missingTranslationsInLocales.push(locale.key);\n                                }\n\n                                this.applyFilters();\n                            },\n                        }, locale.name + ' (' + locale.key + ')')\n                    ),\n                ]),\n                Dropdown.component({\n                    buttonClassName: 'Button',\n                    label: app.translator.trans('fof-linguist.admin.filters.mass-edit'),\n                }, [\n                    Button.component({\n                        icon: 'far fa-clone',\n                        className: 'Button',\n                        onclick: () => {\n                            const strings = app.store.all('fof-linguist-string').filter(string => {\n                                const key = app.store.getById('fof-linguist-string-key', string.key());\n\n                                return key && key.locales()[string.locale()] === string.value();\n                            });\n\n                            if (confirm(extractText(app.translator.trans('fof-linguist.admin.buttons.delete-redundant-confirm', {\n                                count: strings.length + '',\n                            })))) {\n                                if (strings.length === 0) {\n                                    return;\n                                }\n\n                                app.modal.show(LoadingModal);\n\n                                Promise.all(strings.map(string => string.delete())).then(() => {\n                                    window.location.reload();\n                                });\n                            }\n                        },\n                    }, app.translator.trans('fof-linguist.admin.buttons.delete-redundant')),\n                    Button.component({\n                        icon: 'fas fa-trash',\n                        className: 'Button',\n                        onclick: () => {\n                            const strings = app.store.all('fof-linguist-string');\n\n                            if (confirm(extractText(app.translator.trans('fof-linguist.admin.buttons.delete-all-confirm', {\n                                count: strings.length + '',\n                            })))) {\n                                if (strings.length === 0) {\n                                    return;\n                                }\n\n                                app.modal.show(LoadingModal);\n\n                                Promise.all(strings.map(string => string.delete())).then(() => {\n                                    window.location.reload();\n                                });\n                            }\n                        },\n                    }, app.translator.trans('fof-linguist.admin.buttons.delete-all')),\n                ]),\n            ]),\n            m('div', keys.map(stringKey => m(StringKey, {\n                key: stringKey.id(),\n                stringKey,\n                highlight: this.filters.search,\n                onchange: () => {\n                    // We use the setting and not a local variable because we need to preserve state\n                    // if we navigate away and back to the Linguist page without refreshing the admin panel\n                    app.data.settings['fof.linguist.should-clear-cache'] = '1';\n                },\n            }))),\n            m('.FoF-Linguist-Results', [\n                app.translator.trans('fof-linguist.admin.filters.results', {\n                    shown: keys.length + '', // cast to string otherwise number isn't displayed\n                    total: this.results.length + '',\n                }),\n                ' ',\n                (this.results.length > keys.length ? Button.component({\n                    className: 'Button',\n                    onclick: () => {\n                        this.numberOfResultsToShow += RESULTS_PER_PAGE;\n                    },\n                }, app.translator.trans('fof-linguist.admin.buttons.load-more')) : null),\n            ]),\n        ];\n    }\n\n    applyFilters() {\n        this.numberOfResultsToShow = RESULTS_PER_PAGE;\n\n        const keysWithCustomTranslations = app.store.all('fof-linguist-string').map(string => string.key());\n\n        const keysWithCustomTranslationsIn = {};\n        localesAsArray().forEach(locale => {\n            keysWithCustomTranslationsIn[locale.key] = app.store.all('fof-linguist-string')\n                .filter(string => string.locale() === locale.key)\n                .map(string => string.key());\n        });\n\n        let lowercaseSearch = '';\n\n        if (this.filters.search) {\n            lowercaseSearch = this.filters.search.toLowerCase();\n        }\n\n        this.results = app.store.all('fof-linguist-string-key').filter(key => {\n            if (this.filters.withOwnTranslations && keysWithCustomTranslations.indexOf(key.key()) === -1) {\n                return false;\n            }\n\n            if (this.filters.missingTranslationsInLocales.length) {\n                let operation = this.filters.missingTranslationsOperation;\n\n                // Because the whole operation is reversed at the end based on with or without,\n                // we actually need to make the opposite boolean computation on the \"has<x>\" variables\n                if (this.filters.missingTranslationsNegation === 'without') {\n                    operation = operation === 'or' ? 'and' : 'or';\n                }\n\n                const hasOriginalTranslation = booleanCheck(operation, this.filters.missingTranslationsInLocales.map(locale => {\n                    return key.locales().hasOwnProperty(locale);\n                }));\n                const hasOwnTranslation = booleanCheck(operation, this.filters.missingTranslationsInLocales.map(locale => {\n                    return keysWithCustomTranslationsIn[locale].indexOf(key.key()) !== -1;\n                }));\n\n                let matchesType = false;\n\n                switch (this.filters.missingTranslationsType) {\n                    case 'any':\n                        matchesType = hasOriginalTranslation || hasOwnTranslation;\n                        break;\n                    case 'original':\n                        matchesType = hasOriginalTranslation;\n                        break;\n                    case 'own':\n                        matchesType = hasOwnTranslation;\n                        break;\n                }\n\n                if (this.filters.missingTranslationsNegation === 'without') {\n                    matchesType = !matchesType;\n                }\n\n                if (!matchesType) {\n                    return false;\n                }\n            }\n\n            if (this.filters.forExtension) {\n                if (key.key().indexOf(this.filters.forExtension + '.') !== 0) {\n                    return false;\n                }\n            }\n\n            if (this.filters.frontend) {\n                const parts = key.key().split('.');\n\n                if (this.filters.frontend === '_all_except_admin') {\n                    // We will keep everything that isn't admin, including if it's a single level deep\n                    if (parts.length >= 2 && parts[1] === 'admin') {\n                        return false;\n                    }\n                } else {\n                    // Keep only parts with 2 levels or more where second level matches frontend\n                    if (parts.length < 2 || parts[1] !== this.filters.frontend) {\n                        return false;\n                    }\n                }\n            }\n\n            if (lowercaseSearch) {\n                if (key.key().toLowerCase().indexOf(lowercaseSearch) !== -1) {\n                    return true;\n                }\n\n                const locales = key.locales();\n\n                for (let locale in locales) {\n                    if (locales.hasOwnProperty(locale) && locales[locale].toLowerCase().indexOf(lowercaseSearch) !== -1) {\n                        return true;\n                    }\n                }\n\n                return false;\n            }\n\n            return true;\n        });\n\n        m.redraw();\n    }\n}\n","import app from 'flarum/app';\nimport Button from 'flarum/components/Button';\nimport icon from 'flarum/helpers/icon';\nimport localesAsArray from '../utils/localesAsArray';\nimport namespaceLabel from '../utils/namespaceLabel';\nimport frontendLabel from '../utils/frontendLabel';\n\n/* global m */\n\nexport default class CoveragePage {\n    oninit() {\n        this.columns = 'locale';\n        this.showAllFrontends = false;\n        this.totalPercent = true;\n        this.locale = [];\n\n        const firstNonEnglishLocale = localesAsArray().find(locale => locale.key !== 'en');\n\n        if (firstNonEnglishLocale) {\n            this.locale = firstNonEnglishLocale.key;\n        }\n    }\n\n    view(vnode) {\n        let visibleFrontends = vnode.attrs.frontends.slice(0, 2);\n\n        if (this.showAllFrontends) {\n            visibleFrontends = vnode.attrs.frontends;\n        }\n\n        const {browseWithFilters} = vnode.attrs;\n\n        return [\n            m('.FoF-Linguist-Filters', [\n                m('.ButtonGroup', [\n                    Button.component({\n                        className: 'Button' + (this.totalPercent ? ' active' : ''),\n                        onclick: () => {\n                            this.totalPercent = true;\n                        },\n                    }, app.translator.trans('fof-linguist.admin.coverage.total-options.percent')),\n                    Button.component({\n                        className: 'Button' + (this.totalPercent ? ' ' : ' active'),\n                        onclick: () => {\n                            this.totalPercent = false;\n                        },\n                    }, app.translator.trans('fof-linguist.admin.coverage.total-options.count')),\n                ]),\n                m('.ButtonGroup', [\n                    Button.component({\n                        className: 'Button' + (this.columns === 'locale' ? ' active' : ''),\n                        onclick: () => {\n                            this.columns = 'locale';\n                        },\n                    }, app.translator.trans('fof-linguist.admin.coverage.column-options.locale')),\n                    Button.component({\n                        className: 'Button' + (this.columns === 'namespace' ? ' active' : ''),\n                        onclick: () => {\n                            this.columns = 'namespace';\n                            this.showAllFrontends = false;\n                        },\n                    }, app.translator.trans('fof-linguist.admin.coverage.column-options.namespace')),\n                ]),\n                this.columns === 'namespace' ? m('.ButtonGroup', localesAsArray().map(\n                    locale => Button.component({\n                        className: 'Button' + (this.locale === locale.key ? ' active' : ''),\n                        onclick: () => {\n                            if (this.locale !== locale.key) {\n                                this.locale = locale.key;\n                            }\n                        },\n                    }, locale.name + ' (' + locale.key + ')')\n                )) : null,\n            ]),\n            m('table.FoF-Linguist-Coverage', [\n                m('thead', m('tr', [\n                    m('th', app.translator.trans('fof-linguist.admin.coverage.columns.namespace')),\n                    this.columns === 'locale' ? localesAsArray().map(locale => m('th', locale.name + ' (' + locale.key + ')')) : [\n                        this.showAllFrontends ? visibleFrontends.map(frontend => m('th', frontendLabel(frontend))) : [\n                            m('th', app.translator.trans('fof-linguist.admin.coverage.columns.all-except-admin')),\n                            m('th', frontendLabel('admin')),\n                            m('th', Button.component({\n                                className: 'Button',\n                                onclick: () => {\n                                    this.showAllFrontends = true;\n                                },\n                            }, app.translator.trans('fof-linguist.admin.coverage.columns.all-frontends'))),\n                        ],\n                    ],\n                ])),\n                m('tbody', [\n                    this.columns === 'locale' ? m('tr', [\n                        m('td', [\n                            m('span.FoF-Linguist-Coverage-Extension-Icon.FoF-Linguist-Coverage-Namespace-Icon'),\n                            m('span.FoF-Linguist-Coverage-Extension-Title', app.translator.trans('fof-linguist.admin.coverage.all-namespaces')),\n                        ]),\n                        localesAsArray().map(locale => m('td', this.localeCoverage(browseWithFilters, locale.key))),\n                    ]) : null,\n                    vnode.attrs.namespaces.map(namespace => {\n                        return m('tr', [\n                            m('td', namespace.extension ? [\n                                m('span.FoF-Linguist-Coverage-Extension-Icon', {\n                                    style: namespace.extension.icon,\n                                }, namespace.extension.icon ? icon(namespace.extension.icon.name) : ''),\n                                m('span.FoF-Linguist-Coverage-Extension-Title', namespace.extension.extra['flarum-extension'].title),\n                            ] : [\n                                m('span.FoF-Linguist-Coverage-Extension-Icon.FoF-Linguist-Coverage-Namespace-Icon'),\n                                m('span.FoF-Linguist-Coverage-Extension-Title', namespaceLabel(namespace.namespace)),\n                            ]),\n                            this.columns === 'locale' ? localesAsArray().map(locale => m('td', this.localeCoverage(browseWithFilters, locale.key, namespace.namespace))) : [\n                                this.showAllFrontends ?\n                                    visibleFrontends.map(frontend => m('td', this.prefixCoverage(browseWithFilters, namespace.namespace, frontend))) : [\n                                        m('td', this.prefixCoverage(browseWithFilters, namespace.namespace, '_all_except_admin')),\n                                        m('td', this.prefixCoverage(browseWithFilters, namespace.namespace, 'admin')),\n                                    ],\n                            ],\n                        ]);\n                    }),\n                ]),\n            ]),\n        ];\n    }\n\n    prefixCoverage(browseWithFilters, namespace, frontend) {\n        if (!this.locale) {\n            return null;\n        }\n\n        return this.localeCoverage(browseWithFilters, this.locale, namespace, frontend);\n    }\n\n    localeCoverage(browseWithFilters, locale, namespace, frontend) {\n        const stringKeys = app.store.all('fof-linguist-string-key').filter(key => {\n            if (!namespace) {\n                return true;\n            }\n\n            const parts = key.key().split('.');\n\n            if (parts[0] !== namespace) {\n                return false;\n            }\n\n            if (frontend === '_all_except_admin') {\n                if (parts.length >= 2 && parts[1] === 'admin') {\n                    return false;\n                }\n            } else if (frontend && (parts.length < 2 || parts[1] !== frontend)) {\n                return false;\n            }\n\n            return true;\n        });\n\n        if (stringKeys.length === 0) {\n            return '-';\n        }\n\n        let customCount = 0;\n        let originalCount = 0;\n\n        stringKeys.forEach(stringKey => {\n            const customString = app.store.all('fof-linguist-string').find(\n                string => string.key() === stringKey.key() && string.locale() === locale\n            );\n\n            if (customString) {\n                customCount++;\n            } else if (stringKey.locales().hasOwnProperty(locale)) {\n                originalCount++;\n            }\n        });\n\n        const percent = Math.round(((customCount + originalCount) / stringKeys.length) * 100);\n\n        let specialStyle;\n\n        if (percent === 100) {\n            specialStyle = 'full';\n        } else if (percent < 5) {\n            specialStyle = 'low';\n        }\n\n        let label;\n\n        if (this.totalPercent) {\n            label = app.translator.trans('fof-linguist.admin.coverage.count.percent', {\n                percent: percent + '', // Keeps zero as string\n            });\n        } else {\n            label = app.translator.trans('fof-linguist.admin.coverage.count.total', {\n                translated: (customCount + originalCount) + '', // Keeps zero as string\n                total: stringKeys.length,\n            });\n        }\n\n        return m('.FoF-Linguist-Coverage-Progress-Wrap', [\n            m('.FoF-Linguist-Progress', {\n                className: specialStyle ? 'FoF-Linguist-Progress--' + specialStyle : '',\n            }, [\n                m('.FoF-Linguist-Progress-Bar', {\n                    style: {\n                        width: Math.max(percent, 5) + '%', // Always show the progress bar even if very close to 0\n                    },\n                }),\n                m('.FoF-Linguist-Progress-Label', label),\n                m('.FoF-Linguist-Progress-More', app.translator.trans('fof-linguist.admin.coverage.count.details', {\n                    total: stringKeys.length,\n                    original: originalCount + '', // Cast to string to preserve zero\n                    custom: customCount + '',\n                })),\n            ]),\n            Button.component({\n                icon: 'fas fa-filter',\n                className: 'Button Button--icon',\n                onclick: () => {\n                    const options = {\n                        missingTranslationsInLocales: [locale],\n                    };\n\n                    if (namespace) {\n                        options.forExtension = namespace;\n                    }\n\n                    if (frontend) {\n                        options.frontend = frontend;\n                    }\n\n                    browseWithFilters(options);\n                },\n                title: app.translator.trans('fof-linguist.admin.coverage.apply-missing-filter'),\n            }),\n        ]);\n    }\n}\n","import app from 'flarum/app';\nimport Select from 'flarum/components/Select';\nimport Switch from 'flarum/components/Switch';\nimport LinkButton from 'flarum/components/LinkButton';\nimport localesAsArray from '../utils/localesAsArray';\nimport namespaceLabel from '../utils/namespaceLabel';\n\n/* global m */\n\nexport default class ExportPage {\n    oninit() {\n        this.locale = 'en';\n        this.namespace = null;\n        this.includeOriginals = false;\n        this.includeAll = false;\n        this.loading = false;\n        this.output = '';\n\n        this.fetchOutput();\n    }\n\n    view(vnode) {\n        const localeOptions = {};\n\n        localesAsArray().forEach(locale => {\n            localeOptions[locale.key] = locale.name + ' (' + locale.key + ')';\n        });\n\n        localeOptions.all = app.translator.trans('fof-linguist.admin.export.locale-all')\n\n        const namespaceOptions = {\n            _all: app.translator.trans('fof-linguist.admin.export.namespace-all'),\n        };\n\n        vnode.attrs.namespaces.forEach(namespace => {\n            if (namespace.extension) {\n                namespaceOptions[namespace.namespace] = namespace.extension.extra['flarum-extension'].title;\n            } else {\n                namespaceOptions[namespace.namespace] = namespaceLabel(namespace.namespace);\n\n            }\n        });\n\n        return [\n            m('h2', app.translator.trans('fof-linguist.admin.export.title')),\n            m('.Form-group', m('.Alert', app.translator.trans('fof-linguist.admin.export.warning'))),\n            m('.Form-group', [\n                m('label', app.translator.trans('fof-linguist.admin.export.locale')),\n                Select.component({\n                    options: localeOptions,\n                    value: this.locale,\n                    onchange: value => {\n                        this.locale = value;\n\n                        this.fetchOutput();\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans('fof-linguist.admin.export.namespace')),\n                Select.component({\n                    options: namespaceOptions,\n                    value: this.namespace === null ? '_all' : this.namespace,\n                    onchange: value => {\n                        this.namespace = value === '_all' ? null : value;\n\n                        this.fetchOutput();\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                Switch.component({\n                    state: this.includeOriginals,\n                    onchange: value => {\n                        this.includeOriginals = value;\n\n                        this.fetchOutput();\n                    }\n                }, app.translator.trans('fof-linguist.admin.export.include-originals')),\n            ]),\n            m('.Form-group', [\n                Switch.component({\n                    state: this.includeAll,\n                    onchange: value => {\n                        this.includeAll = value;\n\n                        this.fetchOutput();\n                    }\n                }, app.translator.trans('fof-linguist.admin.export.include-all')),\n            ]),\n            m('.Form-group', [\n                m('label', [\n                    app.translator.trans('fof-linguist.admin.export.output'),\n                    ' ',\n                    LinkButton.component({\n                        className: 'Button Button--primary',\n                        href: this.exportUrl(),\n                        external: true,\n                        // If a namespace is selected, we use it as filename (language pack convention)\n                        // otherwise we use the locale as filename (extension convention)\n                        download: (this.namespace || this.locale) + '.yml',\n                    }, app.translator.trans('fof-linguist.admin.export.download')),\n                ]),\n                m('textarea.FormControl.FoF-Export-Textarea', {\n                    readonly: true,\n                    value: this.output,\n                    rows: 10,\n                    placeholder: this.loading ? app.translator.trans('fof-linguist.admin.export.output-loading') : app.translator.trans('fof-linguist.admin.export.output-empty'),\n                }),\n            ]),\n        ];\n    }\n\n    exportUrl() {\n        return app.forum.attribute('apiUrl') + '/fof/linguist/export?' + m.buildQueryString({\n            locale: this.locale,\n            namespace: this.namespace,\n            includeOriginals: this.includeOriginals ? '1' : '0',\n            includeAll: this.includeAll ? '1' : '0',\n        });\n    }\n\n    fetchOutput() {\n        this.loading = true;\n        this.output = '';\n\n        app.request({\n            method: 'GET',\n            url: this.exportUrl(),\n            // Flarum doesn't support a raw to have the raw text response\n            // So we'll encode the response with JSON so Flarum can parse if afterwards\n            extract: raw => JSON.stringify(raw),\n        }).then(output => {\n            this.loading = false;\n            this.output = output;\n            m.redraw();\n        }).catch(error => {\n            this.loading = false;\n            m.redraw();\n            throw error;\n        });\n    }\n}\n","import app from 'flarum/app';\nimport Button from 'flarum/components/Button';\nimport Select from 'flarum/components/Select';\nimport Switch from 'flarum/components/Switch';\nimport extractText from 'flarum/utils/extractText';\nimport localesAsArray from '../utils/localesAsArray';\n\n/* global m */\n\nexport default class ExportPage {\n    oninit() {\n        this.locale = 'en';\n        this.overrideExisting = true;\n        this.input = '';\n        this.loading = false;\n    }\n\n    view() {\n        const localeOptions = {};\n\n        localesAsArray().forEach(locale => {\n            localeOptions[locale.key] = locale.name + ' (' + locale.key + ')';\n        });\n\n        localeOptions.all = app.translator.trans('fof-linguist.admin.import.locale-all')\n\n        return [\n            m('h2', app.translator.trans('fof-linguist.admin.import.title')),\n            m('.Form-group', [\n                m('label', app.translator.trans('fof-linguist.admin.import.input')),\n                m('textarea.FormControl', {\n                    value: this.input,\n                    oninput: event => {\n                        this.input = event.target.value;\n                    },\n                    rows: 10,\n                    placeholder: app.translator.trans('fof-linguist.admin.import.input-placeholder'),\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans('fof-linguist.admin.import.locale')),\n                Select.component({\n                    options: localeOptions,\n                    value: this.locale,\n                    onchange: value => {\n                        this.locale = value;\n\n                        this.fetchOutput();\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                Switch.component({\n                    state: this.overrideExisting,\n                    onchange: value => {\n                        this.overrideExisting = value;\n                    }\n                }, app.translator.trans('fof-linguist.admin.import.override-existing')),\n            ]),\n            m('.Form-group', Button.component({\n                className: 'Button Button--primary',\n                onclick: () => {\n                    this.loading = true;\n\n                    app.request({\n                        method: 'POST',\n                        url: app.forum.attribute('apiUrl') + '/fof/linguist/import',\n                        body: {\n                            input: this.input,\n                            locale: this.locale,\n                            ignoreExisting: !this.overrideExisting,\n                        },\n                    }).then(data => {\n                        this.loading = false;\n                        m.redraw();\n\n                        if (confirm(extractText(app.translator.trans(this.overrideExisting ? 'fof-linguist.admin.import.results' : 'fof-linguist.admin.import.results-with-ignore', {\n                            imported: data.imported + '', // Cast to string to preserve zeros\n                            ignored: data.ignored + '',\n                            identical: data.identical + '',\n                        })))) {\n                            window.location.reload();\n                        }\n                    }).catch(error => {\n                        this.loading = false;\n                        m.redraw();\n                        throw error;\n                    });\n                },\n                disabled: this.loading || !this.input,\n                loading: this.loading,\n            }, app.translator.trans('fof-linguist.admin.import.submit'))),\n        ];\n    }\n}\n","import app from 'flarum/app';\nimport ExtensionPage from 'flarum/components/ExtensionPage';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport StringsPage from './StringsPage';\nimport CoveragePage from './CoveragePage';\nimport ExportPage from './ExportPage';\nimport ImportPage from './ImportPage';\n\n/* global m */\n\nexport default class LinguistPage extends ExtensionPage {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.tab = 'strings';\n        this.ready = false;\n        this.namespaces = []; // First level of translation keys. Usually an extension ID, but also core and validation\n        this.frontends = [\n            'forum',\n            'admin',\n            'lib',\n            'ref',\n            'api',\n        ]; // Second level of translation keys: forum, admin, ...\n        this.initialBrowseFilters = {};\n\n        Promise.all([\n            app.request({\n                method: 'GET',\n                url: app.forum.attribute('apiUrl') + '/fof/linguist/strings',\n            }).then(result => {\n                app.store.pushPayload(result);\n            }),\n            app.request({\n                method: 'GET',\n                url: app.forum.attribute('apiUrl') + '/fof/linguist/string-keys',\n            }).then(result => {\n                const keys = app.store.pushPayload(result);\n\n                const namespaces = [];\n\n                keys.forEach(key => {\n                    const parts = key.key().split('.');\n\n                    const namespace = parts[0];\n\n                    if (['core', 'validation'].indexOf(namespace) === -1 && namespaces.indexOf(namespace) === -1) {\n                        namespaces.push(namespace);\n                    }\n\n                    if (parts.length > 1 && namespace !== 'validation') {\n                        const frontend = parts[1];\n\n                        if (this.frontends.indexOf(frontend) === -1) {\n                            this.frontends.push(frontend);\n                        }\n                    }\n                });\n\n                namespaces.sort();\n\n                this.namespaces = [\n                    {\n                        namespace: 'core',\n                    },\n                    {\n                        namespace: 'validation',\n                    },\n                    ...namespaces.map(namespace => {\n                        // First we look if the namespace matches an extension ID, that's the most common naming\n                        let extension = app.data.extensions[namespace];\n\n                        // If that's unsuccessful, we'll look if the full package name was used as namespace\n                        if (!extension) {\n                            extension = Object.values(app.data.extensions).find(extension => {\n                                const packageNameWithDash = extension.name.replace('/', '-');\n\n                                return namespace === packageNameWithDash;\n                            });\n                        }\n\n                        return {\n                            namespace,\n                            extension,\n                        };\n                    }),\n                ];\n            }),\n        ]).then(() => {\n            this.ready = true;\n            m.redraw();\n        });\n    }\n\n    content() {\n        return m('.ExtensionPage-settings', m('.container', [\n            this.contentTab(),\n        ]));\n    }\n\n    infoItems() {\n        const items = super.infoItems();\n\n        items.add('linguist-tabs', m('ul.FoF-Linguist-Tabs', [\n            m('li', m('a', {\n                className: this.tab === 'strings' ? 'active' : '',\n                onclick: () => {\n                    this.tab = 'strings';\n                },\n            }, app.translator.trans('fof-linguist.admin.tabs.strings'))),\n            m('li', m('a', {\n                className: this.tab === 'coverage' ? 'active' : '',\n                onclick: () => {\n                    this.tab = 'coverage';\n                },\n            }, app.translator.trans('fof-linguist.admin.tabs.coverage'))),\n            m('li', m('a', {\n                className: this.tab === 'export' ? 'active' : '',\n                onclick: () => {\n                    this.tab = 'export';\n                },\n            }, app.translator.trans('fof-linguist.admin.tabs.export'))),\n            m('li', m('a', {\n                className: this.tab === 'import' ? 'active' : '',\n                onclick: () => {\n                    this.tab = 'import';\n                },\n            }, app.translator.trans('fof-linguist.admin.tabs.import'))),\n        ]), 100);\n\n        return items;\n    }\n\n    contentTab() {\n        if (!this.ready) {\n            return LoadingIndicator.component();\n        }\n\n        switch (this.tab) {\n            case 'strings':\n                return m(StringsPage, {\n                    namespaces: this.namespaces,\n                    frontends: this.frontends,\n                    initialBrowseFilters: this.initialBrowseFilters,\n                });\n            case 'coverage':\n                return m(CoveragePage, {\n                    namespaces: this.namespaces,\n                    frontends: this.frontends,\n                    browseWithFilters: filters => {\n                        this.initialBrowseFilters = filters;\n                        this.tab = 'strings';\n                    },\n                });\n            case 'export':\n                return m(ExportPage, {\n                    namespaces: this.namespaces,\n                });\n            case 'import':\n                return m(ImportPage);\n        }\n\n        return null;\n    }\n}\n","import app from 'flarum/app';\nimport StringKey from './models/StringKey';\nimport TextString from './models/TextString';\nimport LinguistPage from './pages/LinguistPage';\n\napp.initializers.add('fof-linguist', app => {\n    app.store.models['fof-linguist-string-key'] = StringKey;\n    app.store.models['fof-linguist-string'] = TextString;\n\n    app.extensionData.for('fof-linguist').registerPage(LinguistPage);\n});\n"],"sourceRoot":""}