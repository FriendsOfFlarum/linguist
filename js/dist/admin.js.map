{"version":3,"sources":["webpack://@fof/linguist/webpack/bootstrap","webpack://@fof/linguist/external \"flarum.core.compat['app']\"","webpack://@fof/linguist/external \"flarum.core.compat['components/Button']\"","webpack://@fof/linguist/external \"flarum.core.compat['Model']\"","webpack://@fof/linguist/external \"flarum.core.compat['components/Select']\"","webpack://@fof/linguist/external \"flarum.core.compat['components/Switch']\"","webpack://@fof/linguist/external \"flarum.core.compat['components/Dropdown']\"","webpack://@fof/linguist/external \"flarum.core.compat['components/ExtensionPage']\"","webpack://@fof/linguist/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@fof/linguist/external \"flarum.core.compat['components/Alert']\"","webpack://@fof/linguist/external \"flarum.core.compat['components/LoadingModal']\"","webpack://@fof/linguist/external \"flarum.core.compat['utils/ItemList']\"","webpack://@fof/linguist/external \"flarum.core.compat['helpers/icon']\"","webpack://@fof/linguist/external \"flarum.core.compat['components/LinkButton']\"","webpack://@fof/linguist/external \"flarum.core.compat['utils/extractText']\"","webpack://@fof/linguist/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@fof/linguist/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/linguist/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://@fof/linguist/./src/admin/models/StringKey.js","webpack://@fof/linguist/./src/admin/models/TextString.js","webpack://@fof/linguist/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://@fof/linguist/./src/admin/utils/localesAsArray.js","webpack://@fof/linguist/./src/admin/utils/highlightMithril.js","webpack://@fof/linguist/./src/admin/components/StringLocale.js","webpack://@fof/linguist/./src/admin/components/StringKey.js","webpack://@fof/linguist/./src/admin/utils/namespaceLabel.js","webpack://@fof/linguist/./src/admin/pages/StringsPage.js","webpack://@fof/linguist/./src/admin/pages/CoveragePage.js","webpack://@fof/linguist/./src/admin/pages/ExportPage.js","webpack://@fof/linguist/./src/admin/pages/ImportPage.js","webpack://@fof/linguist/./src/admin/pages/LinguistPage.js","webpack://@fof/linguist/./src/admin/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_assertThisInitialized","self","ReferenceError","_inheritsLoose","subClass","superClass","constructor","__proto__","_defineProperty","obj","configurable","writable","StringKey","Model","attribute","TextString","apiEndpoint","this","exists","data","id","_extends","assign","target","arguments","length","source","apply","locales","app","push","string","highlight","lowercaseHighliht","toLowerCase","regex","RegExp","replace","HIGHLIGHT_DELIMITER","split","map","text","StringLocale","oninit","vnode","stringKey","attrs","locale","localeKey","originalString","store","all","find","dirty","processing","originalHasNewLine","keys","some","indexOf","inputType","view","placeholderText","translator","trans","localeName","className","title","oninput","event","disabled","highlightMithril","actions","onchange","toArray","items","ItemList","add","Button","component","type","loading","onclick","saveString","deleteString","createRecord","attributes","save","then","redraw","err","localesAsArray","namespace","translation","translations","StringsPage","numberOfResultsToShow","filters","search","withOwnTranslations","missingTranslationsNegation","missingTranslationsType","missingTranslationsInLocale","forExtension","initialBrowseFilters","results","applyFilters","slice","settings","Alert","dismissible","controls","modal","show","LoadingModal","request","method","url","forum","window","location","reload","placeholder","icon","Dropdown","buttonClassName","label","namespaces","extension","extra","namespaceLabel","stopPropagation","Select","options","without","with","any","original","own","shown","total","keysWithCustomTranslations","keysWithCustomTranslationsIn","forEach","filter","lowercaseSearch","hasOriginalTranslation","hasOwnTranslation","matchesType","CoveragePage","columns","totalPercent","firstNonEnglishLocale","localeCoverage","filterButton","browseWithFilters","style","prefixCoverage","prefix","stringKeys","customCount","originalCount","specialStyle","percent","Math","round","translated","width","max","custom","callback","ExportPage","includeOriginals","includeAll","output","fetchOutput","localeOptions","namespaceOptions","_all","Switch","state","LinkButton","href","exportUrl","external","download","readonly","rows","buildQueryString","extract","raw","JSON","stringify","error","overrideExisting","input","body","ignoreExisting","confirm","extractText","imported","ignored","identical","LinguistPage","tab","ready","Promise","result","pushPayload","sort","extensions","values","packageNameWithDash","content","contentTab","infoItems","LoadingIndicator","ImportPage","ExtensionPage","initializers","models","extensionData","registerPage"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = flarum.core.compat['app'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['components/Dropdown'];","module.exports = flarum.core.compat['components/ExtensionPage'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/Alert'];","module.exports = flarum.core.compat['components/LoadingModal'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['utils/extractText'];","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import Model from 'flarum/Model';\n\nexport default class StringKey extends Model {\n    key = Model.attribute('key');\n    locales = Model.attribute('locales');\n}\n","import Model from 'flarum/Model';\n\nexport default class TextString extends Model {\n    key = Model.attribute('key');\n    locale = Model.attribute('locale');\n    value = Model.attribute('value');\n\n    apiEndpoint() {\n        return '/fof/linguist/strings' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","export default function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}","import app from 'flarum/app';\n\nexport default function () {\n    let locales = [];\n\n    for (let key in app.data.locales) {\n        if (!app.data.locales.hasOwnProperty(key)) {\n            continue;\n        }\n\n        locales.push({\n            key,\n            name: app.data.locales[key],\n        });\n    }\n\n    return locales;\n}\n","/* global m */\n\nconst HIGHLIGHT_DELIMITER = '<fof-highlight>';\n\n// Takes a string and highlight a keyword with a span with mithril template\n// The output will be an array if a keyword is given\nexport default function (string, highlight) {\n    if (!highlight) {\n        return string;\n    }\n\n    const lowercaseHighliht = highlight.toLowerCase();\n\n    // Regex to match the highlighted work in a case-insensitive manner\n    const regex = new RegExp(lowercaseHighliht.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i');\n\n    return string\n        .replace(regex, HIGHLIGHT_DELIMITER + '$&' + HIGHLIGHT_DELIMITER)\n        .split(HIGHLIGHT_DELIMITER)\n        .map(text => {\n            if (text.toLowerCase() === lowercaseHighliht) {\n                return m('span.FoF-Linguist-Highlight', text);\n            }\n\n            return text;\n        });\n}\n","import app from 'flarum/app';\nimport ItemList from 'flarum/utils/ItemList';\nimport Button from 'flarum/components/Button';\nimport highlightMithril from '../utils/highlightMithril';\n\n/* global m */\n\nexport default class StringLocale {\n    oninit(vnode) {\n        this.stringKey = vnode.attrs.stringKey;\n        this.locale = vnode.attrs.locale;\n        this.localeKey = this.locale ? this.locale.key : null;\n        this.originalString = this.localeKey && this.stringKey.locales().hasOwnProperty(this.localeKey) ? this.stringKey.locales()[this.localeKey] : null;\n\n        this.string = app.store.all('fof-linguist-string').find(\n            string => string.key() === this.stringKey.key() && string.locale() === this.localeKey\n        );\n\n        this.value = this.string ? this.string.value() : '';\n        this.dirty = false;\n        this.processing = false;\n\n        // We check whether any original translation in any language has a newline\n        // By not hard-coding to English, this should work pretty well even if the fallback locale is modified,\n        // or if a text happens to not be available in the fallback language\n        const originalHasNewLine = Object.keys(this.stringKey.locales()).some(key => this.stringKey.locales()[key].indexOf('\\n') !== -1);\n\n        this.inputType = 'input';\n\n        // We will enable multi-line editing if the original has a newline, or if the current custom value already has one\n        if (originalHasNewLine || this.value.indexOf('\\n') !== -1) {\n            this.inputType = 'textarea';\n        }\n    }\n\n    view(vnode) {\n        const placeholderText = this.originalString ? this.originalString : '(' + app.translator.trans('fof-linguist.admin.placeholder.' + (this.localeKey ? 'not-translated' : 'all-locales')) + ')';\n\n        return m('.FoF-Linguist-Locale', [\n            m('label.FoF-Linguist-Label', this.localeName()),\n            m('.FoF-Linguist-Field', {\n                className: (this.value ? 'FoF-Linguist-Field--with-value' : '') + (this.originalString ? ' FoF-Linguist-Field--with-original-string' : ''),\n                title: placeholderText,\n            }, [\n                m('.FoF-Linguist-Field-Wrap', [\n                    m(this.inputType, {\n                        className: 'FormControl FoF-Linguist-Input',\n                        value: this.value,\n                        oninput: event => {\n                            this.value = event.target.value;\n                            this.dirty = true;\n\n                            // Remove dirty state if the user erased his text without saving\n                            if (!this.value && !this.string) {\n                                this.dirty = false;\n                            }\n                        },\n                        disabled: this.processing,\n                    }),\n                    m('.FoF-Linguist-Placeholder', [\n                        m('span.FoF-Linguist-Placeholder-Hint', app.translator.trans('fof-linguist.admin.placeholder.hint')),\n                        ' ',\n                        m('span', this.originalString ? highlightMithril(placeholderText, vnode.attrs.highlight) : placeholderText),\n                    ]),\n                ]),\n            ]),\n            m('.FoF-Linguist-Controls', this.actions(vnode.attrs.onchange).toArray()),\n        ]);\n    }\n\n    localeName() {\n        if (this.locale) {\n            return [this.locale.name + ' (', m('code', this.locale.key), ')'];\n        } else {\n            return app.translator.trans('fof-linguist.admin.locales.all');\n        }\n    }\n\n    actions(onchange) {\n        const items = new ItemList();\n\n        items.add('apply', Button.component({\n            type: 'button',\n            className: 'Button Button--primary',\n            loading: this.processing,\n            disabled: !this.dirty,\n            onclick: () => {\n                this.saveString(onchange);\n            },\n        }, app.translator.trans('fof-linguist.admin.buttons.apply')));\n\n        items.add('reset', Button.component({\n            type: 'button',\n            className: 'Button',\n            loading: this.processing,\n            disabled: !this.dirty && !this.string,\n            onclick: () => {\n                this.deleteString(onchange);\n            },\n        }, app.translator.trans('fof-linguist.admin.buttons.reset')));\n\n        if (this.originalString) {\n            items.add('copy-original', Button.component({\n                type: 'button',\n                className: 'Button',\n                loading: this.processing,\n                onclick: () => {\n                    this.value = this.originalString;\n                    this.dirty = true;\n                },\n            }, app.translator.trans('fof-linguist.admin.buttons.copy-original')));\n        }\n\n        return items;\n    }\n\n    saveString(onchange) {\n        if (!this.value) {\n            this.deleteString(onchange);\n\n            return;\n        }\n\n        if (!this.string) {\n            this.string = app.store.createRecord('fof-linguist-string', {\n                attributes: {\n                    key: this.stringKey.key(),\n                    locale: this.localeKey,\n                    value: '',\n                },\n            });\n        }\n\n        this.string.data.attributes.value = this.value;\n\n        if (!this.string.locale()) delete this.string.data.attributes.locale;\n\n        this.processing = true;\n\n        this.string.save(this.string.data.attributes).then(() => {\n            this.processing = false;\n            this.dirty = false;\n\n            onchange();\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n\n    deleteString(onchange) {\n        if (this.string) {\n            this.processing = true;\n\n            this.string.delete().then(() => {\n                this.processing = false;\n                this.dirty = false;\n\n                this.string = null;\n                this.value = '';\n\n                onchange();\n\n                m.redraw();\n            }).catch(err => {\n                this.processing = false;\n\n                throw err;\n            });\n        } else {\n            this.value = '';\n            this.dirty = false;\n        }\n    }\n}\n","import StringLocale from '../components/StringLocale';\nimport localesAsArray from '../utils/localesAsArray';\nimport highlightMithril from '../utils/highlightMithril';\n\n/* global m */\n\nexport default class StringKey {\n    view(vnode) {\n        const {\n            stringKey,\n            highlight,\n            onchange,\n        } = vnode.attrs;\n\n        return m('.FoF-Linguist-Key', [\n            m('.FoF-Linguist-Key-Code', m('code', highlightMithril(stringKey.key(), highlight))),\n            m('.FoF-Linguist-Locales', [\n                ...localesAsArray().map(locale => m(StringLocale, {\n                    key: locale.key,\n                    locale,\n                    stringKey,\n                    highlight,\n                    onchange,\n                })),\n                m(StringLocale, {\n                    key: 'all',\n                    locale: null,\n                    stringKey,\n                    highlight,\n                    onchange,\n                }),\n            ]),\n        ]);\n    }\n}\n","import app from 'flarum/app';\n\nexport default function (namespace) {\n    const translation = app.translator.translations['fof-linguist.admin.known-namespace.' + namespace];\n\n    if (translation) {\n        return translation;\n    }\n\n    return namespace;\n}\n","import app from 'flarum/app';\nimport Button from 'flarum/components/Button';\nimport Dropdown from 'flarum/components/Dropdown';\nimport Select from 'flarum/components/Select';\nimport Alert from 'flarum/components/Alert';\nimport LoadingModal from 'flarum/components/LoadingModal';\nimport localesAsArray from '../utils/localesAsArray';\nimport StringKey from '../components/StringKey';\nimport namespaceLabel from '../utils/namespaceLabel';\n\n/* global m */\n\nconst RESULTS_PER_PAGE = 20;\n\nexport default class StringsPage {\n    oninit(vnode) {\n        this.numberOfResultsToShow = RESULTS_PER_PAGE;\n\n        this.filters = Object.assign({\n            search: '',\n            withOwnTranslations: false,\n            missingTranslationsNegation: 'without',\n            missingTranslationsType: 'any',\n            missingTranslationsInLocale: null,\n            forExtension: null,\n        }, vnode.attrs.initialBrowseFilters || {});\n\n        this.results = [];\n\n        this.applyFilters();\n    }\n\n    view(vnode) {\n        const keys = this.results.slice(0, this.numberOfResultsToShow);\n\n        return [\n            // Additional divs are used to reduce Mithril redraws as much as possible when the conditional components appear\n            m('div', app.data.settings['fof.linguist.should-clear-cache'] === '1' ? Alert.component({\n                dismissible: false,\n                controls: [Button.component({\n                    className: 'Button Button--link',\n                    onclick() {\n                        // Same logic as in core StatusWidget\n                        app.modal.show(LoadingModal);\n\n                        app.request({\n                            method: 'DELETE',\n                            url: app.forum.attribute('apiUrl') + '/cache',\n                        }).then(() => window.location.reload());\n                    },\n                }, app.translator.trans('fof-linguist.admin.clear-cache.button'))],\n            }, app.translator.trans('fof-linguist.admin.clear-cache.text')) : null),\n            m('.FoF-Linguist-Filters', [\n                m('input.FormControl', {\n                    value: this.filters.search,\n                    oninput: event => {\n                        this.filters.search = event.target.value;\n                        this.applyFilters();\n                    },\n                    placeholder: app.translator.trans('fof-linguist.admin.filters.search'),\n                }),\n                Button.component({\n                    className: 'Button' + (this.filters.withOwnTranslations ? ' FoF-Linguist-Filter--Selected' : ''),\n                    icon: `far fa-${this.filters.withOwnTranslations ? 'check-square' : 'square'}`,\n                    onclick: () => {\n                        this.filters.withOwnTranslations = !this.filters.withOwnTranslations;\n                        this.applyFilters();\n                    },\n                }, app.translator.trans('fof-linguist.admin.filters.with-own-translations')),\n                Dropdown.component({\n                    buttonClassName: 'Button' + (this.filters.forExtension ? ' FoF-Linguist-Filter--Selected' : ''),\n                    label: app.translator.trans('fof-linguist.admin.filters.for-extension'),\n                }, vnode.attrs.namespaces.map(\n                    namespace => Button.component({\n                        className: 'Button',\n                        icon: `far fa-${this.filters.forExtension === namespace.namespace ? 'check-square' : 'square'}`,\n                        onclick: event => {\n                            if (this.filters.forExtension === namespace.namespace) {\n                                this.filters.forExtension = null;\n                            } else {\n                                this.filters.forExtension = namespace.namespace;\n                            }\n\n                            this.applyFilters();\n                        },\n                    }, namespace.extension ? namespace.extension.extra['flarum-extension'].title : namespaceLabel(namespace.namespace))\n                )),\n                Dropdown.component({\n                    buttonClassName: 'Button' + (this.filters.missingTranslationsInLocale ? ' FoF-Linguist-Filter--Selected' : ''),\n                    label: app.translator.trans('fof-linguist.admin.filters.missing'),\n                }, [\n                    m('.FoF-Linguist-Missing-Filter', {\n                        onclick(event) {\n                            // Prevent closing the dropdown\n                            event.stopPropagation();\n                        },\n                    }, [\n                        Select.component({\n                            value: this.filters.missingTranslationsNegation,\n                            onchange: value => {\n                                this.filters.missingTranslationsNegation = value;\n\n                                if (this.filters.missingTranslationsInLocale) {\n                                    this.applyFilters();\n                                }\n                            },\n                            options: {\n                                without: app.translator.trans('fof-linguist.admin.filters.negation-options.without'),\n                                with: app.translator.trans('fof-linguist.admin.filters.negation-options.with'),\n                            }\n                        }),\n                        Select.component({\n                            value: this.filters.missingTranslationsType,\n                            onchange: value => {\n                                this.filters.missingTranslationsType = value;\n\n                                if (this.filters.missingTranslationsInLocale) {\n                                    this.applyFilters();\n                                }\n                            },\n                            options: {\n                                any: app.translator.trans('fof-linguist.admin.filters.type-options.any'),\n                                original: app.translator.trans('fof-linguist.admin.filters.type-options.original'),\n                                own: app.translator.trans('fof-linguist.admin.filters.type-options.own'),\n                            }\n                        }),\n                        m('p', app.translator.trans('fof-linguist.admin.filters.missing-middle-label')),\n                    ]),\n                    ...localesAsArray().map(\n                        locale => Button.component({\n                            className: 'Button',\n                            icon: `far fa-${this.filters.missingTranslationsInLocale === locale.key ? 'check-square' : 'square'}`,\n                            onclick: () => {\n                                if (this.filters.missingTranslationsInLocale === locale.key) {\n                                    this.filters.missingTranslationsInLocale = null\n                                } else {\n                                    this.filters.missingTranslationsInLocale = locale.key;\n                                }\n\n                                this.applyFilters();\n                            },\n                        }, locale.name + ' (' + locale.key + ')')\n                    ),\n                ]),\n            ]),\n            m('div', keys.map(stringKey => m(StringKey, {\n                key: stringKey.id(),\n                stringKey,\n                highlight: this.filters.search,\n                onchange: () => {\n                    // We use the setting and not a local variable because we need to preserve state\n                    // if we navigate away and back to the Linguist page without refreshing the admin panel\n                    app.data.settings['fof.linguist.should-clear-cache'] = '1';\n                },\n            }))),\n            m('.FoF-Linguist-Results', [\n                app.translator.trans('fof-linguist.admin.filters.results', {\n                    shown: keys.length + '', // cast to string otherwise number isn't displayed\n                    total: this.results.length + '',\n                }),\n                ' ',\n                (this.results.length > keys.length ? Button.component({\n                    className: 'Button',\n                    onclick: () => {\n                        this.numberOfResultsToShow += RESULTS_PER_PAGE;\n                    },\n                }, app.translator.trans('fof-linguist.admin.buttons.load-more')) : null),\n            ]),\n        ];\n    }\n\n    applyFilters() {\n        this.numberOfResultsToShow = RESULTS_PER_PAGE;\n\n        const keysWithCustomTranslations = app.store.all('fof-linguist-string').map(string => string.key());\n\n        const keysWithCustomTranslationsIn = {};\n        localesAsArray().forEach(locale => {\n            keysWithCustomTranslationsIn[locale.key] = app.store.all('fof-linguist-string')\n                .filter(string => string.locale() === locale.key)\n                .map(string => string.key());\n        });\n\n        let lowercaseSearch = '';\n\n        if (this.filters.search) {\n            lowercaseSearch = this.filters.search.toLowerCase();\n        }\n\n        this.results = app.store.all('fof-linguist-string-key').filter(key => {\n            if (this.filters.withOwnTranslations && keysWithCustomTranslations.indexOf(key.key()) === -1) {\n                return false;\n            }\n\n            if (this.filters.missingTranslationsInLocale) {\n                let hasOriginalTranslation = key.locales().hasOwnProperty(this.filters.missingTranslationsInLocale);\n                let hasOwnTranslation = keysWithCustomTranslationsIn[this.filters.missingTranslationsInLocale].indexOf(key.key()) !== -1;\n\n                let matchesType = false;\n\n                switch (this.filters.missingTranslationsType) {\n                    case 'any':\n                        matchesType = hasOriginalTranslation || hasOwnTranslation;\n                        break;\n                    case 'original':\n                        matchesType = hasOriginalTranslation;\n                        break;\n                    case 'own':\n                        matchesType = hasOwnTranslation;\n                        break;\n                }\n\n                if (this.filters.missingTranslationsNegation === 'without') {\n                    matchesType = !matchesType;\n                }\n\n                if (!matchesType) {\n                    return false;\n                }\n            }\n\n            if (this.filters.forExtension) {\n                if (key.key().indexOf(this.filters.forExtension + '.') !== 0) {\n                    return false;\n                }\n            }\n\n            if (lowercaseSearch) {\n                if (key.key().toLowerCase().indexOf(lowercaseSearch) !== -1) {\n                    return true;\n                }\n\n                const locales = key.locales();\n\n                for (let locale in locales) {\n                    if (locales.hasOwnProperty(locale) && locales[locale].toLowerCase().indexOf(lowercaseSearch) !== -1) {\n                        return true;\n                    }\n                }\n\n                return false;\n            }\n\n            return true;\n        });\n\n        m.redraw();\n    }\n}\n","import app from 'flarum/app';\nimport Button from 'flarum/components/Button';\nimport icon from 'flarum/helpers/icon';\nimport localesAsArray from '../utils/localesAsArray';\nimport namespaceLabel from '../utils/namespaceLabel';\n\n/* global m */\n\nexport default class CoveragePage {\n    oninit() {\n        this.columns = 'locale';\n        this.totalPercent = true;\n        this.locale = [];\n\n        const firstNonEnglishLocale = localesAsArray().find(locale => locale.key !== 'en');\n\n        if (firstNonEnglishLocale) {\n            this.locale = firstNonEnglishLocale.key;\n        }\n    }\n\n    view(vnode) {\n        return [\n            m('.FoF-Linguist-Filters', [\n                m('.ButtonGroup', [\n                    Button.component({\n                        className: 'Button' + (this.totalPercent ? ' active' : ''),\n                        onclick: () => {\n                            this.totalPercent = true;\n                        },\n                    }, app.translator.trans('fof-linguist.admin.coverage.total-options.percent')),\n                    Button.component({\n                        className: 'Button' + (this.totalPercent ? ' ' : ' active'),\n                        onclick: () => {\n                            this.totalPercent = false;\n                        },\n                    }, app.translator.trans('fof-linguist.admin.coverage.total-options.count')),\n                ]),\n                m('.ButtonGroup', [\n                    Button.component({\n                        className: 'Button' + (this.columns === 'locale' ? ' active' : ''),\n                        onclick: () => {\n                            this.columns = 'locale';\n                        },\n                    }, app.translator.trans('fof-linguist.admin.coverage.column-options.locale')),\n                    Button.component({\n                        className: 'Button' + (this.columns === 'namespace' ? ' active' : ''),\n                        onclick: () => {\n                            this.columns = 'namespace';\n                        },\n                    }, app.translator.trans('fof-linguist.admin.coverage.column-options.namespace')),\n                ]),\n                this.columns === 'namespace' ? m('.ButtonGroup', localesAsArray().map(\n                    locale => Button.component({\n                        className: 'Button' + (this.locale === locale.key ? ' active' : ''),\n                        onclick: () => {\n                            if (this.locale !== locale.key) {\n                                this.locale = locale.key;\n                            }\n                        },\n                    }, locale.name + ' (' + locale.key + ')')\n                )) : null,\n            ]),\n            m('table.FoF-Linguist-Coverage', [\n                m('thead', m('tr', [\n                    m('th', app.translator.trans('fof-linguist.admin.coverage.columns.namespace')),\n                    this.columns === 'locale' ? localesAsArray().map(locale => m('th', locale.name + ' (' + locale.key + ')')) : [\n                        m('th', app.translator.trans('fof-linguist.admin.coverage.columns.total')),\n                        m('th', app.translator.trans('fof-linguist.admin.coverage.columns.forum')),\n                        m('th', app.translator.trans('fof-linguist.admin.coverage.columns.admin')),\n                        m('th', app.translator.trans('fof-linguist.admin.coverage.columns.lib')),\n                        m('th', app.translator.trans('fof-linguist.admin.coverage.columns.ref')),\n                        m('th', app.translator.trans('fof-linguist.admin.coverage.columns.api')),\n                    ],\n                ])),\n                m('tbody', [\n                    this.columns === 'locale' ? m('tr', [\n                        m('td', [\n                            m('span.FoF-Linguist-Coverage-Extension-Icon.FoF-Linguist-Coverage-Namespace-Icon'),\n                            m('span.FoF-Linguist-Coverage-Extension-Title', app.translator.trans('fof-linguist.admin.coverage.all-namespaces')),\n                        ]),\n                        localesAsArray().map(locale => m('td', m('.FoF-Linguist-Coverage-Progress-Wrap', [\n                            this.localeCoverage('', locale.key),\n                            this.filterButton(() => {\n                                vnode.attrs.browseWithFilters({\n                                    missingTranslationsInLocale: locale.key,\n                                });\n                            }),\n                        ]))),\n                    ]) : null,\n                    vnode.attrs.namespaces.map(namespace => {\n                        return m('tr', [\n                            m('td', namespace.extension ? [\n                                m('span.FoF-Linguist-Coverage-Extension-Icon', {\n                                    style: namespace.extension.icon,\n                                }, namespace.extension.icon ? icon(namespace.extension.icon.name) : ''),\n                                m('span.FoF-Linguist-Coverage-Extension-Title', namespace.extension.extra['flarum-extension'].title),\n                            ] : [\n                                m('span.FoF-Linguist-Coverage-Extension-Icon.FoF-Linguist-Coverage-Namespace-Icon'),\n                                m('span.FoF-Linguist-Coverage-Extension-Title', namespaceLabel(namespace.namespace)),\n                            ]),\n                            this.columns === 'locale' ? localesAsArray().map(locale => m('td', m('.FoF-Linguist-Coverage-Progress-Wrap', [\n                                this.localeCoverage(namespace.namespace + '.', locale.key),\n                                this.filterButton(() => {\n                                    vnode.attrs.browseWithFilters({\n                                        forExtension: namespace.namespace,\n                                        missingTranslationsInLocale: locale.key,\n                                    });\n                                }),\n                            ]))) : [\n                                m('td', m('.FoF-Linguist-Coverage-Progress-Wrap', [\n                                    this.prefixCoverage(namespace.namespace + '.'),\n                                    this.filterButton(() => {\n                                        vnode.attrs.browseWithFilters({\n                                            forExtension: namespace.namespace,\n                                            missingTranslationsInLocale: this.locale,\n                                        });\n                                    }),\n                                ])),\n                                m('td', this.prefixCoverage(namespace.namespace + '.forum.')),\n                                m('td', this.prefixCoverage(namespace.namespace + '.admin.')),\n                                m('td', this.prefixCoverage(namespace.namespace + '.lib.')),\n                                m('td', this.prefixCoverage(namespace.namespace + '.ref.')),\n                                m('td', this.prefixCoverage(namespace.namespace + '.api.')),\n                            ],\n                        ]);\n                    }),\n                ]),\n            ]),\n        ];\n    }\n\n    prefixCoverage(prefix) {\n        if (!this.locale) {\n            return null;\n        }\n\n        return this.localeCoverage(prefix, this.locale);\n    }\n\n    localeCoverage(prefix, locale) {\n        const stringKeys = app.store.all('fof-linguist-string-key').filter(key => key.key().indexOf(prefix) === 0);\n\n        if (stringKeys.length === 0) {\n            return '-';\n        }\n\n        let customCount = 0;\n        let originalCount = 0;\n\n        stringKeys.forEach(stringKey => {\n            const customString = app.store.all('fof-linguist-string').find(\n                string => string.key() === stringKey.key() && string.locale() === locale\n            );\n\n            if (customString) {\n                customCount++;\n            } else if (stringKey.locales().hasOwnProperty(locale)) {\n                originalCount++;\n            }\n        });\n\n        const percent = Math.round(((customCount + originalCount) / stringKeys.length) * 100);\n\n        let specialStyle;\n\n        if (percent === 100) {\n            specialStyle = 'full';\n        } else if (percent < 5) {\n            specialStyle = 'low';\n        }\n\n        let label;\n\n        if (this.totalPercent) {\n            label = app.translator.trans('fof-linguist.admin.coverage.count.percent', {\n                percent: percent + '', // Keeps zero as string\n            });\n        } else {\n            label = app.translator.trans('fof-linguist.admin.coverage.count.total', {\n                translated: (customCount + originalCount) + '', // Keeps zero as string\n                total: stringKeys.length,\n            });\n        }\n\n        return m('.FoF-Linguist-Progress', {\n            className: specialStyle ? 'FoF-Linguist-Progress--' + specialStyle : '',\n        }, [\n            m('.FoF-Linguist-Progress-Bar', {\n                style: {\n                    width: Math.max(percent, 5) + '%', // Always show the progress bar even if very close to 0\n                },\n            }),\n            m('.FoF-Linguist-Progress-Label', label),\n            m('.FoF-Linguist-Progress-More', app.translator.trans('fof-linguist.admin.coverage.count.details', {\n                total: stringKeys.length,\n                original: originalCount + '', // Cast to string to preserve zero\n                custom: customCount + '',\n            })),\n        ]);\n    }\n\n    filterButton(callback) {\n        return Button.component({\n            icon: 'fas fa-filter',\n            className: 'Button Button--icon',\n            onclick: () => {\n                callback();\n            },\n            title: app.translator.trans('fof-linguist.admin.coverage.apply-missing-filter'),\n        })\n    }\n}\n","import app from 'flarum/app';\nimport Select from 'flarum/components/Select';\nimport Switch from 'flarum/components/Switch';\nimport LinkButton from 'flarum/components/LinkButton';\nimport localesAsArray from '../utils/localesAsArray';\nimport namespaceLabel from '../utils/namespaceLabel';\n\n/* global m */\n\nexport default class ExportPage {\n    oninit() {\n        this.locale = 'en';\n        this.namespace = null;\n        this.includeOriginals = false;\n        this.includeAll = false;\n        this.loading = false;\n        this.output = '';\n\n        this.fetchOutput();\n    }\n\n    view(vnode) {\n        const localeOptions = {};\n\n        localesAsArray().forEach(locale => {\n            localeOptions[locale.key] = locale.name + ' (' + locale.key + ')';\n        });\n\n        localeOptions.all = app.translator.trans('fof-linguist.admin.export.locale-all')\n\n        const namespaceOptions = {\n            _all: app.translator.trans('fof-linguist.admin.export.namespace-all'),\n        };\n\n        vnode.attrs.namespaces.forEach(namespace => {\n            if (namespace.extension) {\n                namespaceOptions[namespace.namespace] = namespace.extension.extra['flarum-extension'].title;\n            } else {\n                namespaceOptions[namespace.namespace] = namespaceLabel(namespace.namespace);\n\n            }\n        });\n\n        return [\n            m('h2', app.translator.trans('fof-linguist.admin.export.title')),\n            m('.Form-group', m('.Alert', app.translator.trans('fof-linguist.admin.export.warning'))),\n            m('.Form-group', [\n                m('label', app.translator.trans('fof-linguist.admin.export.locale')),\n                Select.component({\n                    options: localeOptions,\n                    value: this.locale,\n                    onchange: value => {\n                        this.locale = value;\n\n                        this.fetchOutput();\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans('fof-linguist.admin.export.namespace')),\n                Select.component({\n                    options: namespaceOptions,\n                    value: this.namespace === null ? '_all' : this.namespace,\n                    onchange: value => {\n                        this.namespace = value === '_all' ? null : value;\n\n                        this.fetchOutput();\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                Switch.component({\n                    state: this.includeOriginals,\n                    onchange: value => {\n                        this.includeOriginals = value;\n\n                        this.fetchOutput();\n                    }\n                }, app.translator.trans('fof-linguist.admin.export.include-originals')),\n            ]),\n            m('.Form-group', [\n                Switch.component({\n                    state: this.includeAll,\n                    onchange: value => {\n                        this.includeAll = value;\n\n                        this.fetchOutput();\n                    }\n                }, app.translator.trans('fof-linguist.admin.export.include-all')),\n            ]),\n            m('.Form-group', [\n                m('label', [\n                    app.translator.trans('fof-linguist.admin.export.output'),\n                    ' ',\n                    LinkButton.component({\n                        className: 'Button Button--primary',\n                        href: this.exportUrl(),\n                        external: true,\n                        download: this.locale + '.yml',\n                    }, app.translator.trans('fof-linguist.admin.export.download')),\n                ]),\n                m('textarea.FormControl.FoF-Export-Textarea', {\n                    readonly: true,\n                    value: this.output,\n                    rows: 10,\n                    placeholder: this.loading ? app.translator.trans('fof-linguist.admin.export.output-loading') : app.translator.trans('fof-linguist.admin.export.output-empty'),\n                }),\n            ]),\n        ];\n    }\n\n    exportUrl() {\n        return app.forum.attribute('apiUrl') + '/fof/linguist/export?' + m.buildQueryString({\n            locale: this.locale,\n            namespace: this.namespace,\n            includeOriginals: this.includeOriginals ? '1' : '0',\n            includeAll: this.includeAll ? '1' : '0',\n        });\n    }\n\n    fetchOutput() {\n        this.loading = true;\n        this.output = '';\n\n        app.request({\n            method: 'GET',\n            url: this.exportUrl(),\n            // Flarum doesn't support a raw to have the raw text response\n            // So we'll encode the response with JSON so Flarum can parse if afterwards\n            extract: raw => JSON.stringify(raw),\n        }).then(output => {\n            this.loading = false;\n            this.output = output;\n            m.redraw();\n        }).catch(error => {\n            this.loading = false;\n            m.redraw();\n            throw error;\n        });\n    }\n}\n","import app from 'flarum/app';\nimport Button from 'flarum/components/Button';\nimport Select from 'flarum/components/Select';\nimport Switch from 'flarum/components/Switch';\nimport extractText from 'flarum/utils/extractText';\nimport localesAsArray from '../utils/localesAsArray';\n\n/* global m */\n\nexport default class ExportPage {\n    oninit() {\n        this.locale = 'en';\n        this.overrideExisting = true;\n        this.input = '';\n        this.loading = false;\n    }\n\n    view() {\n        const localeOptions = {};\n\n        localesAsArray().forEach(locale => {\n            localeOptions[locale.key] = locale.name + ' (' + locale.key + ')';\n        });\n\n        localeOptions.all = app.translator.trans('fof-linguist.admin.import.locale-all')\n\n        return [\n            m('h2', app.translator.trans('fof-linguist.admin.import.title')),\n            m('.Form-group', [\n                m('label', app.translator.trans('fof-linguist.admin.import.input')),\n                m('textarea.FormControl', {\n                    value: this.input,\n                    oninput: event => {\n                        this.input = event.target.value;\n                    },\n                    rows: 10,\n                    placeholder: app.translator.trans('fof-linguist.admin.import.input-placeholder'),\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans('fof-linguist.admin.import.locale')),\n                Select.component({\n                    options: localeOptions,\n                    value: this.locale,\n                    onchange: value => {\n                        this.locale = value;\n\n                        this.fetchOutput();\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                Switch.component({\n                    state: this.overrideExisting,\n                    onchange: value => {\n                        this.overrideExisting = value;\n                    }\n                }, app.translator.trans('fof-linguist.admin.import.override-existing')),\n            ]),\n            m('.Form-group', Button.component({\n                className: 'Button Button--primary',\n                onclick: () => {\n                    this.loading = true;\n\n                    app.request({\n                        method: 'POST',\n                        url: app.forum.attribute('apiUrl') + '/fof/linguist/import',\n                        body: {\n                            input: this.input,\n                            locale: this.locale,\n                            ignoreExisting: !this.overrideExisting,\n                        },\n                    }).then(data => {\n                        this.loading = false;\n                        m.redraw();\n\n                        if (confirm(extractText(app.translator.trans(this.overrideExisting ? 'fof-linguist.admin.import.results' : 'fof-linguist.admin.import.results-with-ignore', {\n                            imported: data.imported + '', // Cast to string to preserve zeros\n                            ignored: data.ignored + '',\n                            identical: data.identical + '',\n                        })))) {\n                            window.location.reload();\n                        }\n                    }).catch(error => {\n                        this.loading = false;\n                        m.redraw();\n                        throw error;\n                    });\n                },\n                disabled: this.loading || !this.input,\n                loading: this.loading,\n            }, app.translator.trans('fof-linguist.admin.import.submit'))),\n        ];\n    }\n}\n","import app from 'flarum/app';\nimport ExtensionPage from 'flarum/components/ExtensionPage';\nimport LoadingIndicator from 'flarum/components/LoadingIndicator';\nimport StringsPage from './StringsPage';\nimport CoveragePage from './CoveragePage';\nimport ExportPage from './ExportPage';\nimport ImportPage from './ImportPage';\n\n/* global m */\n\nexport default class LinguistPage extends ExtensionPage {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.tab = 'strings';\n        this.ready = false;\n        this.namespaces = [];\n        this.initialBrowseFilters = {};\n\n        Promise.all([\n            app.request({\n                method: 'GET',\n                url: app.forum.attribute('apiUrl') + '/fof/linguist/strings',\n            }).then(result => {\n                app.store.pushPayload(result);\n            }),\n            app.request({\n                method: 'GET',\n                url: app.forum.attribute('apiUrl') + '/fof/linguist/string-keys',\n            }).then(result => {\n                const keys = app.store.pushPayload(result);\n\n                const namespaces = [];\n\n                keys.forEach(key => {\n                    const namespace = key.key().split('.')[0];\n\n                    if (['core', 'validation'].indexOf(namespace) === -1 && namespaces.indexOf(namespace) === -1) {\n                        namespaces.push(namespace);\n                    }\n                });\n\n                namespaces.sort();\n\n                this.namespaces = [\n                    {\n                        namespace: 'core',\n                    },\n                    {\n                        namespace: 'validation',\n                    },\n                    ...namespaces.map(namespace => {\n                        // First we look if the namespace matches an extension ID, that's the most common naming\n                        let extension = app.data.extensions[namespace];\n\n                        // If that's unsuccessful, we'll look if the full package name was used as namespace\n                        if (!extension) {\n                            extension = Object.values(app.data.extensions).find(extension => {\n                                const packageNameWithDash = extension.name.replace('/', '-');\n\n                                return namespace === packageNameWithDash;\n                            });\n                        }\n\n                        return {\n                            namespace,\n                            extension,\n                        };\n                    }),\n                ];\n            }),\n        ]).then(() => {\n            this.ready = true;\n            m.redraw();\n        });\n    }\n\n    content() {\n        return m('.ExtensionPage-settings', m('.container', [\n            this.contentTab(),\n        ]));\n    }\n\n    infoItems() {\n        const items = super.infoItems();\n\n        items.add('linguist-tabs', m('ul.FoF-Linguist-Tabs', [\n            m('li', m('a', {\n                className: this.tab === 'strings' ? 'active' : '',\n                onclick: () => {\n                    this.tab = 'strings';\n                },\n            }, app.translator.trans('fof-linguist.admin.tabs.strings'))),\n            m('li', m('a', {\n                className: this.tab === 'coverage' ? 'active' : '',\n                onclick: () => {\n                    this.tab = 'coverage';\n                },\n            }, app.translator.trans('fof-linguist.admin.tabs.coverage'))),\n            m('li', m('a', {\n                className: this.tab === 'export' ? 'active' : '',\n                onclick: () => {\n                    this.tab = 'export';\n                },\n            }, app.translator.trans('fof-linguist.admin.tabs.export'))),\n            m('li', m('a', {\n                className: this.tab === 'import' ? 'active' : '',\n                onclick: () => {\n                    this.tab = 'import';\n                },\n            }, app.translator.trans('fof-linguist.admin.tabs.import'))),\n        ]), 100);\n\n        return items;\n    }\n\n    contentTab() {\n        if (!this.ready) {\n            return LoadingIndicator.component();\n        }\n\n        switch (this.tab) {\n            case 'strings':\n                return m(StringsPage, {\n                    namespaces: this.namespaces,\n                    initialBrowseFilters: this.initialBrowseFilters,\n                });\n            case 'coverage':\n                return m(CoveragePage, {\n                    namespaces: this.namespaces,\n                    browseWithFilters: filters => {\n                        this.initialBrowseFilters = filters;\n                        this.tab = 'strings';\n                    },\n                });\n            case 'export':\n                return m(ExportPage, {\n                    namespaces: this.namespaces,\n                });\n            case 'import':\n                return m(ImportPage);\n        }\n\n        return null;\n    }\n}\n","import app from 'flarum/app';\nimport StringKey from './models/StringKey';\nimport TextString from './models/TextString';\nimport LinguistPage from './pages/LinguistPage';\n\napp.initializers.add('fof-linguist', app => {\n    app.store.models['fof-linguist-string-key'] = StringKey;\n    app.store.models['fof-linguist-string'] = TextString;\n\n    app.extensionData.for('fof-linguist').registerPage(LinguistPage);\n});\n"],"sourceRoot":""}