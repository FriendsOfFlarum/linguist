{"version":3,"sources":["webpack://@fof/linguist/webpack/bootstrap","webpack://@fof/linguist/external \"flarum.core.compat['admin/app']\"","webpack://@fof/linguist/external \"flarum.core.compat['common/components/Button']\"","webpack://@fof/linguist/external \"flarum.core.compat['common/components/Select']\"","webpack://@fof/linguist/external \"flarum.core.compat['common/Model']\"","webpack://@fof/linguist/external \"flarum.core.compat['common/utils/extractText']\"","webpack://@fof/linguist/external \"flarum.core.compat['common/components/Switch']\"","webpack://@fof/linguist/external \"flarum.core.compat['common/components/Dropdown']\"","webpack://@fof/linguist/external \"flarum.core.compat['admin/components/LoadingModal']\"","webpack://@fof/linguist/external \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://@fof/linguist/external \"flarum.core.compat['common/components/LoadingIndicator']\"","webpack://@fof/linguist/external \"flarum.core.compat['common/components/Alert']\"","webpack://@fof/linguist/external \"flarum.core.compat['common/utils/ItemList']\"","webpack://@fof/linguist/external \"flarum.core.compat['common/helpers/icon']\"","webpack://@fof/linguist/external \"flarum.core.compat['common/components/LinkButton']\"","webpack://@fof/linguist/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/linguist/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/linguist/./src/admin/models/StringKey.js","webpack://@fof/linguist/./src/admin/models/TextString.js","webpack://@fof/linguist/./src/admin/utils/localesAsArray.js","webpack://@fof/linguist/./src/admin/utils/highlightMithril.js","webpack://@fof/linguist/./src/admin/components/StringLocale.js","webpack://@fof/linguist/./src/admin/components/StringKey.js","webpack://@fof/linguist/./src/admin/utils/namespaceLabel.js","webpack://@fof/linguist/./src/admin/utils/frontendLabel.js","webpack://@fof/linguist/./src/admin/utils/booleanCheck.js","webpack://@fof/linguist/./src/admin/pages/StringsPage.js","webpack://@fof/linguist/./src/admin/pages/CoveragePage.js","webpack://@fof/linguist/./src/admin/pages/ExportPage.js","webpack://@fof/linguist/./src/admin/pages/ImportPage.js","webpack://@fof/linguist/./src/admin/pages/LinguistPage.js","webpack://@fof/linguist/./src/admin/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","StringKey","Model","attribute","locales","TextString","locale","apiEndpoint","this","exists","data","id","app","push","string","highlight","lowercaseHighliht","toLowerCase","regex","RegExp","replace","HIGHLIGHT_DELIMITER","split","map","text","StringLocale","oninit","vnode","stringKey","attrs","localeKey","originalString","store","all","find","dirty","processing","originalHasNewLine","keys","some","indexOf","inputType","view","placeholderText","translator","trans","localeName","className","title","oninput","event","target","disabled","highlightMithril","actions","onchange","toArray","items","ItemList","add","Button","component","type","loading","onclick","saveString","deleteString","createRecord","attributes","save","then","redraw","err","localesAsArray","namespace","translation","translations","frontend","operation","booleans","reduce","a","b","StringsPage","numberOfResultsToShow","filters","assign","search","withOwnTranslations","missingTranslationsNegation","missingTranslationsType","missingTranslationsOperation","missingTranslationsInLocales","forExtension","initialBrowseFilters","results","applyFilters","slice","settings","Alert","dismissible","controls","modal","show","LoadingModal","request","method","url","forum","window","location","reload","placeholder","icon","Dropdown","buttonClassName","label","namespaces","extension","extra","namespaceLabel","frontends","frontendLabel","length","stopPropagation","Select","options","without","with","any","original","own","or","and","filter","strings","getById","confirm","extractText","count","Promise","shown","total","keysWithCustomTranslations","keysWithCustomTranslationsIn","forEach","lowercaseSearch","hasOriginalTranslation","booleanCheck","hasOwnTranslation","matchesType","parts","CoveragePage","columns","showAllFrontends","totalPercent","firstNonEnglishLocale","visibleFrontends","browseWithFilters","localeCoverage","style","prefixCoverage","stringKeys","customCount","originalCount","specialStyle","percent","Math","round","translated","width","max","custom","ExportPage","includeOriginals","includeAll","output","fetchOutput","localeOptions","namespaceOptions","_all","Switch","state","LinkButton","href","exportUrl","external","download","readonly","rows","buildQueryString","extract","raw","JSON","stringify","error","overrideExisting","input","body","ignoreExisting","imported","ignored","identical","LinguistPage","tab","ready","result","pushPayload","sort","extensions","values","packageNameWithDash","content","contentTab","infoItems","LoadingIndicator","ImportPage","ExtensionPage","initializers","models","extensionData","registerPage"],"mappings":"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","file":"admin.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 14);\n","module.exports = flarum.core.compat['admin/app'];","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/components/Select'];","module.exports = flarum.core.compat['common/Model'];","module.exports = flarum.core.compat['common/utils/extractText'];","module.exports = flarum.core.compat['common/components/Switch'];","module.exports = flarum.core.compat['common/components/Dropdown'];","module.exports = flarum.core.compat['admin/components/LoadingModal'];","module.exports = flarum.core.compat['admin/components/ExtensionPage'];","module.exports = flarum.core.compat['common/components/LoadingIndicator'];","module.exports = flarum.core.compat['common/components/Alert'];","module.exports = flarum.core.compat['common/utils/ItemList'];","module.exports = flarum.core.compat['common/helpers/icon'];","module.exports = flarum.core.compat['common/components/LinkButton'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import Model from 'flarum/common/Model';\n\nexport default class StringKey extends Model {\n    key = Model.attribute('key');\n    locales = Model.attribute('locales');\n}\n","import Model from 'flarum/common/Model';\n\nexport default class TextString extends Model {\n    key = Model.attribute('key');\n    locale = Model.attribute('locale');\n    value = Model.attribute('value');\n\n    apiEndpoint() {\n        return '/fof/linguist/strings' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","import app from 'flarum/admin/app';\n\nexport default function () {\n    let locales = [];\n\n    for (let key in app.data.locales) {\n        if (!app.data.locales.hasOwnProperty(key)) {\n            continue;\n        }\n\n        locales.push({\n            key,\n            name: app.data.locales[key],\n        });\n    }\n\n    return locales;\n}\n","/* global m */\n\nconst HIGHLIGHT_DELIMITER = '<fof-highlight>';\n\n// Takes a string and highlight a keyword with a span with mithril template\n// The output will be an array if a keyword is given\nexport default function (string, highlight) {\n    if (!highlight) {\n        return string;\n    }\n\n    const lowercaseHighliht = highlight.toLowerCase();\n\n    // Regex to match the highlighted work in a case-insensitive manner\n    const regex = new RegExp(lowercaseHighliht.replace(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&'), 'i');\n\n    return string\n        .replace(regex, HIGHLIGHT_DELIMITER + '$&' + HIGHLIGHT_DELIMITER)\n        .split(HIGHLIGHT_DELIMITER)\n        .map(text => {\n            if (text.toLowerCase() === lowercaseHighliht) {\n                return m('span.FoF-Linguist-Highlight', text);\n            }\n\n            return text;\n        });\n}\n","import app from 'flarum/admin/app';\nimport ItemList from 'flarum/common/utils/ItemList';\nimport Button from 'flarum/common/components/Button';\nimport highlightMithril from '../utils/highlightMithril';\n\n/* global m */\n\nexport default class StringLocale {\n    oninit(vnode) {\n        this.stringKey = vnode.attrs.stringKey;\n        this.locale = vnode.attrs.locale;\n        this.localeKey = this.locale ? this.locale.key : null;\n        this.originalString = this.localeKey && this.stringKey.locales().hasOwnProperty(this.localeKey) ? this.stringKey.locales()[this.localeKey] : null;\n\n        this.string = app.store.all('fof-linguist-string').find(\n            string => string.key() === this.stringKey.key() && string.locale() === this.localeKey\n        );\n\n        this.value = this.string ? this.string.value() : '';\n        this.dirty = false;\n        this.processing = false;\n\n        // We check whether any original translation in any language has a newline\n        // By not hard-coding to English, this should work pretty well even if the fallback locale is modified,\n        // or if a text happens to not be available in the fallback language\n        const originalHasNewLine = Object.keys(this.stringKey.locales()).some(key => this.stringKey.locales()[key].indexOf('\\n') !== -1);\n\n        this.inputType = 'input';\n\n        // We will enable multi-line editing if the original has a newline, or if the current custom value already has one\n        if (originalHasNewLine || this.value.indexOf('\\n') !== -1) {\n            this.inputType = 'textarea';\n        }\n    }\n\n    view(vnode) {\n        const placeholderText = this.originalString ? this.originalString : '(' + app.translator.trans('fof-linguist.admin.placeholder.' + (this.localeKey ? 'not-translated' : 'all-locales')) + ')';\n\n        return m('.FoF-Linguist-Locale', [\n            m('label.FoF-Linguist-Label', this.localeName()),\n            m('.FoF-Linguist-Field', {\n                className: (this.value ? 'FoF-Linguist-Field--with-value' : '') + (this.originalString ? ' FoF-Linguist-Field--with-original-string' : ''),\n                title: placeholderText,\n            }, [\n                m('.FoF-Linguist-Field-Wrap', [\n                    m(this.inputType, {\n                        className: 'FormControl FoF-Linguist-Input',\n                        value: this.value,\n                        oninput: event => {\n                            this.value = event.target.value;\n                            this.dirty = true;\n\n                            // Remove dirty state if the user erased his text without saving\n                            if (!this.value && !this.string) {\n                                this.dirty = false;\n                            }\n                        },\n                        disabled: this.processing,\n                    }),\n                    m('.FoF-Linguist-Placeholder', [\n                        m('span.FoF-Linguist-Placeholder-Hint', app.translator.trans('fof-linguist.admin.placeholder.hint')),\n                        ' ',\n                        m('span', this.originalString ? highlightMithril(placeholderText, vnode.attrs.highlight) : placeholderText),\n                    ]),\n                ]),\n            ]),\n            m('.FoF-Linguist-Controls', this.actions(vnode.attrs.onchange).toArray()),\n        ]);\n    }\n\n    localeName() {\n        if (this.locale) {\n            return [this.locale.name + ' (', m('code', this.locale.key), ')'];\n        } else {\n            return app.translator.trans('fof-linguist.admin.locales.all');\n        }\n    }\n\n    actions(onchange) {\n        const items = new ItemList();\n\n        items.add('apply', Button.component({\n            type: 'button',\n            className: 'Button Button--primary',\n            loading: this.processing,\n            disabled: !this.dirty,\n            onclick: () => {\n                this.saveString(onchange);\n            },\n        }, app.translator.trans('fof-linguist.admin.buttons.apply')));\n\n        items.add('reset', Button.component({\n            type: 'button',\n            className: 'Button',\n            loading: this.processing,\n            disabled: !this.dirty && !this.string,\n            onclick: () => {\n                this.deleteString(onchange);\n            },\n        }, app.translator.trans('fof-linguist.admin.buttons.reset')));\n\n        if (this.originalString) {\n            items.add('copy-original', Button.component({\n                type: 'button',\n                className: 'Button',\n                loading: this.processing,\n                onclick: () => {\n                    this.value = this.originalString;\n                    this.dirty = true;\n                },\n            }, app.translator.trans('fof-linguist.admin.buttons.copy-original')));\n        }\n\n        return items;\n    }\n\n    saveString(onchange) {\n        if (!this.value) {\n            this.deleteString(onchange);\n\n            return;\n        }\n\n        if (!this.string) {\n            this.string = app.store.createRecord('fof-linguist-string', {\n                attributes: {\n                    key: this.stringKey.key(),\n                    locale: this.localeKey,\n                    value: '',\n                },\n            });\n        }\n\n        this.string.data.attributes.value = this.value;\n\n        if (!this.string.locale()) delete this.string.data.attributes.locale;\n\n        this.processing = true;\n\n        this.string.save(this.string.data.attributes).then(() => {\n            this.processing = false;\n            this.dirty = false;\n\n            onchange();\n\n            m.redraw();\n        }).catch(err => {\n            this.processing = false;\n\n            throw err;\n        });\n    }\n\n    deleteString(onchange) {\n        if (this.string) {\n            this.processing = true;\n\n            this.string.delete().then(() => {\n                this.processing = false;\n                this.dirty = false;\n\n                this.string = null;\n                this.value = '';\n\n                onchange();\n\n                m.redraw();\n            }).catch(err => {\n                this.processing = false;\n\n                throw err;\n            });\n        } else {\n            this.value = '';\n            this.dirty = false;\n        }\n    }\n}\n","import StringLocale from '../components/StringLocale';\nimport localesAsArray from '../utils/localesAsArray';\nimport highlightMithril from '../utils/highlightMithril';\n\n/* global m */\n\nexport default class StringKey {\n    view(vnode) {\n        const {\n            stringKey,\n            highlight,\n            onchange,\n        } = vnode.attrs;\n\n        return m('.FoF-Linguist-Key', [\n            m('.FoF-Linguist-Key-Code', m('code', highlightMithril(stringKey.key(), highlight))),\n            m('.FoF-Linguist-Locales', [\n                ...localesAsArray().map(locale => m(StringLocale, {\n                    key: locale.key,\n                    locale,\n                    stringKey,\n                    highlight,\n                    onchange,\n                })),\n                m(StringLocale, {\n                    key: 'all',\n                    locale: null,\n                    stringKey,\n                    highlight,\n                    onchange,\n                }),\n            ]),\n        ]);\n    }\n}\n","import app from 'flarum/admin/app';\n\nexport default function (namespace) {\n    const translation = app.translator.translations['fof-linguist.admin.known-namespace.' + namespace];\n\n    if (translation) {\n        return translation;\n    }\n\n    return namespace;\n}\n","import app from 'flarum/admin/app';\n\nexport default function (frontend) {\n    const translation = app.translator.translations['fof-linguist.admin.known-frontend.' + frontend];\n\n    if (translation) {\n        return translation;\n    }\n\n    return frontend;\n}\n","export default function (operation, booleans) {\n    return booleans.reduce((a, b) => {\n        if (a === 'start') {\n            return b;\n        }\n\n        if (operation === 'or') {\n            return a || b;\n        }\n\n        return a && b;\n    }, 'start');\n}\n","import app from 'flarum/admin/app';\nimport Button from 'flarum/common/components/Button';\nimport Dropdown from 'flarum/common/components/Dropdown';\nimport Select from 'flarum/common/components/Select';\nimport Alert from 'flarum/common/components/Alert';\nimport LoadingModal from 'flarum/admin/components/LoadingModal';\nimport extractText from 'flarum/common/utils/extractText';\nimport localesAsArray from '../utils/localesAsArray';\nimport StringKey from '../components/StringKey';\nimport namespaceLabel from '../utils/namespaceLabel';\nimport frontendLabel from '../utils/frontendLabel';\nimport booleanCheck from '../utils/booleanCheck';\n\n/* global m */\n\nconst RESULTS_PER_PAGE = 20;\n\nexport default class StringsPage {\n    oninit(vnode) {\n        this.numberOfResultsToShow = RESULTS_PER_PAGE;\n\n        this.filters = Object.assign({\n            search: '',\n            withOwnTranslations: false,\n            missingTranslationsNegation: 'without',\n            missingTranslationsType: 'any',\n            missingTranslationsOperation: 'or',\n            missingTranslationsInLocales: [],\n            forExtension: null,\n            frontend: null,\n        }, vnode.attrs.initialBrowseFilters || {});\n\n        this.results = [];\n\n        this.applyFilters();\n    }\n\n    view(vnode) {\n        const keys = this.results.slice(0, this.numberOfResultsToShow);\n\n        return [\n            // Additional divs are used to reduce Mithril redraws as much as possible when the conditional components appear\n            m('div', app.data.settings['fof.linguist.should-clear-cache'] === '1' ? Alert.component({\n                dismissible: false,\n                controls: [Button.component({\n                    className: 'Button Button--link',\n                    onclick() {\n                        // Same logic as in core StatusWidget\n                        app.modal.show(LoadingModal);\n\n                        app.request({\n                            method: 'DELETE',\n                            url: app.forum.attribute('apiUrl') + '/cache',\n                        }).then(() => window.location.reload());\n                    },\n                }, app.translator.trans('fof-linguist.admin.clear-cache.button'))],\n            }, app.translator.trans('fof-linguist.admin.clear-cache.text')) : null),\n            m('.FoF-Linguist-Filters', [\n                m('input.FormControl', {\n                    value: this.filters.search,\n                    oninput: event => {\n                        this.filters.search = event.target.value;\n                        this.applyFilters();\n                    },\n                    placeholder: app.translator.trans('fof-linguist.admin.filters.search'),\n                }),\n                Button.component({\n                    className: 'Button' + (this.filters.withOwnTranslations ? ' FoF-Linguist-Filter--Selected' : ''),\n                    icon: `far fa-${this.filters.withOwnTranslations ? 'check-square' : 'square'}`,\n                    onclick: () => {\n                        this.filters.withOwnTranslations = !this.filters.withOwnTranslations;\n                        this.applyFilters();\n                    },\n                }, app.translator.trans('fof-linguist.admin.filters.with-own-translations')),\n                Dropdown.component({\n                    buttonClassName: 'Button' + (this.filters.forExtension ? ' FoF-Linguist-Filter--Selected' : ''),\n                    label: app.translator.trans('fof-linguist.admin.filters.for-extension'),\n                }, vnode.attrs.namespaces.map(\n                    namespace => Button.component({\n                        className: 'Button',\n                        icon: `far fa-${this.filters.forExtension === namespace.namespace ? 'dot-circle' : 'circle'}`,\n                        onclick: () => {\n                            if (this.filters.forExtension === namespace.namespace) {\n                                this.filters.forExtension = null;\n                            } else {\n                                this.filters.forExtension = namespace.namespace;\n                            }\n\n                            this.applyFilters();\n                        },\n                    }, namespace.extension ? namespace.extension.extra['flarum-extension'].title : namespaceLabel(namespace.namespace))\n                )),\n                Dropdown.component({\n                    buttonClassName: 'Button' + (this.filters.frontend ? ' FoF-Linguist-Filter--Selected' : ''),\n                    label: app.translator.trans('fof-linguist.admin.filters.frontend'),\n                }, [\n                    '_all_except_admin',\n                    ...vnode.attrs.frontends,\n                ].map(\n                    frontend => Button.component({\n                        className: 'Button',\n                        icon: `far fa-${this.filters.frontend === frontend ? 'dot-circle' : 'circle'}`,\n                        onclick: () => {\n                            if (this.filters.frontend === frontend) {\n                                this.filters.frontend = null;\n                            } else {\n                                this.filters.frontend = frontend;\n                            }\n\n                            this.applyFilters();\n                        },\n                    }, frontend === '_all_except_admin' ? app.translator.trans('fof-linguist.admin.filters.frontend-all-except-admin') : frontendLabel(frontend))\n                )),\n                Dropdown.component({\n                    buttonClassName: 'Button' + (this.filters.missingTranslationsInLocales.length ? ' FoF-Linguist-Filter--Selected' : ''),\n                    label: app.translator.trans('fof-linguist.admin.filters.missing'),\n                }, [\n                    m('.FoF-Linguist-Missing-Filter', {\n                        onclick(event) {\n                            // Prevent closing the dropdown\n                            event.stopPropagation();\n                        },\n                    }, [\n                        Select.component({\n                            value: this.filters.missingTranslationsNegation,\n                            onchange: value => {\n                                this.filters.missingTranslationsNegation = value;\n\n                                if (this.filters.missingTranslationsInLocales.length) {\n                                    this.applyFilters();\n                                }\n                            },\n                            options: {\n                                without: app.translator.trans('fof-linguist.admin.filters.negation-options.without'),\n                                with: app.translator.trans('fof-linguist.admin.filters.negation-options.with'),\n                            },\n                        }),\n                        Select.component({\n                            value: this.filters.missingTranslationsType,\n                            onchange: value => {\n                                this.filters.missingTranslationsType = value;\n\n                                if (this.filters.missingTranslationsInLocales.length) {\n                                    this.applyFilters();\n                                }\n                            },\n                            options: {\n                                any: app.translator.trans('fof-linguist.admin.filters.type-options.any'),\n                                original: app.translator.trans('fof-linguist.admin.filters.type-options.original'),\n                                own: app.translator.trans('fof-linguist.admin.filters.type-options.own'),\n                            },\n                        }),\n                        m('p', app.translator.trans('fof-linguist.admin.filters.missing-middle-label')),\n                        Select.component({\n                            value: this.filters.missingTranslationsOperation,\n                            onchange: value => {\n                                this.filters.missingTranslationsOperation = value;\n\n                                if (this.filters.missingTranslationsInLocales.length) {\n                                    this.applyFilters();\n                                }\n                            },\n                            options: {\n                                or: app.translator.trans('fof-linguist.admin.filters.operation-options.or'),\n                                and: app.translator.trans('fof-linguist.admin.filters.operation-options.and'),\n                            },\n                        }),\n                    ]),\n                    ...localesAsArray().map(\n                        locale => Button.component({\n                            className: 'Button',\n                            icon: `far fa-${this.filters.missingTranslationsInLocales.indexOf(locale.key) !== -1 ? 'check-square' : 'square'}`,\n                            onclick: () => {\n                                if (this.filters.missingTranslationsInLocales.indexOf(locale.key) !== -1) {\n                                    this.filters.missingTranslationsInLocales = this.filters.missingTranslationsInLocales.filter(key => key !== locale.key);\n                                } else {\n                                    this.filters.missingTranslationsInLocales.push(locale.key);\n                                }\n\n                                this.applyFilters();\n                            },\n                        }, locale.name + ' (' + locale.key + ')')\n                    ),\n                ]),\n                Dropdown.component({\n                    buttonClassName: 'Button',\n                    label: app.translator.trans('fof-linguist.admin.filters.mass-edit'),\n                }, [\n                    Button.component({\n                        icon: 'far fa-clone',\n                        className: 'Button',\n                        onclick: () => {\n                            const strings = app.store.all('fof-linguist-string').filter(string => {\n                                const key = app.store.getById('fof-linguist-string-key', string.key());\n\n                                return key && key.locales()[string.locale()] === string.value();\n                            });\n\n                            if (confirm(extractText(app.translator.trans('fof-linguist.admin.buttons.delete-redundant-confirm', {\n                                count: strings.length + '',\n                            })))) {\n                                if (strings.length === 0) {\n                                    return;\n                                }\n\n                                app.modal.show(LoadingModal);\n\n                                Promise.all(strings.map(string => string.delete())).then(() => {\n                                    window.location.reload();\n                                });\n                            }\n                        },\n                    }, app.translator.trans('fof-linguist.admin.buttons.delete-redundant')),\n                    Button.component({\n                        icon: 'fas fa-trash',\n                        className: 'Button',\n                        onclick: () => {\n                            const strings = app.store.all('fof-linguist-string');\n\n                            if (confirm(extractText(app.translator.trans('fof-linguist.admin.buttons.delete-all-confirm', {\n                                count: strings.length + '',\n                            })))) {\n                                if (strings.length === 0) {\n                                    return;\n                                }\n\n                                app.modal.show(LoadingModal);\n\n                                Promise.all(strings.map(string => string.delete())).then(() => {\n                                    window.location.reload();\n                                });\n                            }\n                        },\n                    }, app.translator.trans('fof-linguist.admin.buttons.delete-all')),\n                ]),\n            ]),\n            m('div', keys.map(stringKey => m(StringKey, {\n                key: stringKey.id(),\n                stringKey,\n                highlight: this.filters.search,\n                onchange: () => {\n                    // We use the setting and not a local variable because we need to preserve state\n                    // if we navigate away and back to the Linguist page without refreshing the admin panel\n                    app.data.settings['fof.linguist.should-clear-cache'] = '1';\n                },\n            }))),\n            m('.FoF-Linguist-Results', [\n                app.translator.trans('fof-linguist.admin.filters.results', {\n                    shown: keys.length + '', // cast to string otherwise number isn't displayed\n                    total: this.results.length + '',\n                }),\n                ' ',\n                (this.results.length > keys.length ? Button.component({\n                    className: 'Button',\n                    onclick: () => {\n                        this.numberOfResultsToShow += RESULTS_PER_PAGE;\n                    },\n                }, app.translator.trans('fof-linguist.admin.buttons.load-more')) : null),\n            ]),\n        ];\n    }\n\n    applyFilters() {\n        this.numberOfResultsToShow = RESULTS_PER_PAGE;\n\n        const keysWithCustomTranslations = app.store.all('fof-linguist-string').map(string => string.key());\n\n        const keysWithCustomTranslationsIn = {};\n        localesAsArray().forEach(locale => {\n            keysWithCustomTranslationsIn[locale.key] = app.store.all('fof-linguist-string')\n                .filter(string => string.locale() === locale.key)\n                .map(string => string.key());\n        });\n\n        let lowercaseSearch = '';\n\n        if (this.filters.search) {\n            lowercaseSearch = this.filters.search.toLowerCase();\n        }\n\n        this.results = app.store.all('fof-linguist-string-key').filter(key => {\n            if (this.filters.withOwnTranslations && keysWithCustomTranslations.indexOf(key.key()) === -1) {\n                return false;\n            }\n\n            if (this.filters.missingTranslationsInLocales.length) {\n                let operation = this.filters.missingTranslationsOperation;\n\n                // Because the whole operation is reversed at the end based on with or without,\n                // we actually need to make the opposite boolean computation on the \"has<x>\" variables\n                if (this.filters.missingTranslationsNegation === 'without') {\n                    operation = operation === 'or' ? 'and' : 'or';\n                }\n\n                const hasOriginalTranslation = booleanCheck(operation, this.filters.missingTranslationsInLocales.map(locale => {\n                    return key.locales().hasOwnProperty(locale);\n                }));\n                const hasOwnTranslation = booleanCheck(operation, this.filters.missingTranslationsInLocales.map(locale => {\n                    return keysWithCustomTranslationsIn[locale].indexOf(key.key()) !== -1;\n                }));\n\n                let matchesType = false;\n\n                switch (this.filters.missingTranslationsType) {\n                    case 'any':\n                        matchesType = hasOriginalTranslation || hasOwnTranslation;\n                        break;\n                    case 'original':\n                        matchesType = hasOriginalTranslation;\n                        break;\n                    case 'own':\n                        matchesType = hasOwnTranslation;\n                        break;\n                }\n\n                if (this.filters.missingTranslationsNegation === 'without') {\n                    matchesType = !matchesType;\n                }\n\n                if (!matchesType) {\n                    return false;\n                }\n            }\n\n            if (this.filters.forExtension) {\n                if (key.key().indexOf(this.filters.forExtension + '.') !== 0) {\n                    return false;\n                }\n            }\n\n            if (this.filters.frontend) {\n                const parts = key.key().split('.');\n\n                if (this.filters.frontend === '_all_except_admin') {\n                    // We will keep everything that isn't admin, including if it's a single level deep\n                    if (parts.length >= 2 && parts[1] === 'admin') {\n                        return false;\n                    }\n                } else {\n                    // Keep only parts with 2 levels or more where second level matches frontend\n                    if (parts.length < 2 || parts[1] !== this.filters.frontend) {\n                        return false;\n                    }\n                }\n            }\n\n            if (lowercaseSearch) {\n                if (key.key().toLowerCase().indexOf(lowercaseSearch) !== -1) {\n                    return true;\n                }\n\n                const locales = key.locales();\n\n                for (let locale in locales) {\n                    if (locales.hasOwnProperty(locale) && locales[locale].toLowerCase().indexOf(lowercaseSearch) !== -1) {\n                        return true;\n                    }\n                }\n\n                return false;\n            }\n\n            return true;\n        });\n\n        m.redraw();\n    }\n}\n","import app from 'flarum/admin/app';\nimport Button from 'flarum/common/components/Button';\nimport icon from 'flarum/common/helpers/icon';\nimport localesAsArray from '../utils/localesAsArray';\nimport namespaceLabel from '../utils/namespaceLabel';\nimport frontendLabel from '../utils/frontendLabel';\n\n/* global m */\n\nexport default class CoveragePage {\n    oninit() {\n        this.columns = 'locale';\n        this.showAllFrontends = false;\n        this.totalPercent = true;\n        this.locale = [];\n\n        const firstNonEnglishLocale = localesAsArray().find(locale => locale.key !== 'en');\n\n        if (firstNonEnglishLocale) {\n            this.locale = firstNonEnglishLocale.key;\n        }\n    }\n\n    view(vnode) {\n        let visibleFrontends = vnode.attrs.frontends.slice(0, 2);\n\n        if (this.showAllFrontends) {\n            visibleFrontends = vnode.attrs.frontends;\n        }\n\n        const {browseWithFilters} = vnode.attrs;\n\n        return [\n            m('.FoF-Linguist-Filters', [\n                m('.ButtonGroup', [\n                    Button.component({\n                        className: 'Button' + (this.totalPercent ? ' active' : ''),\n                        onclick: () => {\n                            this.totalPercent = true;\n                        },\n                    }, app.translator.trans('fof-linguist.admin.coverage.total-options.percent')),\n                    Button.component({\n                        className: 'Button' + (this.totalPercent ? ' ' : ' active'),\n                        onclick: () => {\n                            this.totalPercent = false;\n                        },\n                    }, app.translator.trans('fof-linguist.admin.coverage.total-options.count')),\n                ]),\n                m('.ButtonGroup', [\n                    Button.component({\n                        className: 'Button' + (this.columns === 'locale' ? ' active' : ''),\n                        onclick: () => {\n                            this.columns = 'locale';\n                        },\n                    }, app.translator.trans('fof-linguist.admin.coverage.column-options.locale')),\n                    Button.component({\n                        className: 'Button' + (this.columns === 'namespace' ? ' active' : ''),\n                        onclick: () => {\n                            this.columns = 'namespace';\n                            this.showAllFrontends = false;\n                        },\n                    }, app.translator.trans('fof-linguist.admin.coverage.column-options.namespace')),\n                ]),\n                this.columns === 'namespace' ? m('.ButtonGroup', localesAsArray().map(\n                    locale => Button.component({\n                        className: 'Button' + (this.locale === locale.key ? ' active' : ''),\n                        onclick: () => {\n                            if (this.locale !== locale.key) {\n                                this.locale = locale.key;\n                            }\n                        },\n                    }, locale.name + ' (' + locale.key + ')')\n                )) : null,\n            ]),\n            m('table.FoF-Linguist-Coverage', [\n                m('thead', m('tr', [\n                    m('th', app.translator.trans('fof-linguist.admin.coverage.columns.namespace')),\n                    this.columns === 'locale' ? localesAsArray().map(locale => m('th', locale.name + ' (' + locale.key + ')')) : [\n                        this.showAllFrontends ? visibleFrontends.map(frontend => m('th', frontendLabel(frontend))) : [\n                            m('th', app.translator.trans('fof-linguist.admin.coverage.columns.all-except-admin')),\n                            m('th', frontendLabel('admin')),\n                            m('th', Button.component({\n                                className: 'Button',\n                                onclick: () => {\n                                    this.showAllFrontends = true;\n                                },\n                            }, app.translator.trans('fof-linguist.admin.coverage.columns.all-frontends'))),\n                        ],\n                    ],\n                ])),\n                m('tbody', [\n                    this.columns === 'locale' ? m('tr', [\n                        m('td', [\n                            m('span.FoF-Linguist-Coverage-Extension-Icon.FoF-Linguist-Coverage-Namespace-Icon'),\n                            m('span.FoF-Linguist-Coverage-Extension-Title', app.translator.trans('fof-linguist.admin.coverage.all-namespaces')),\n                        ]),\n                        localesAsArray().map(locale => m('td', this.localeCoverage(browseWithFilters, locale.key))),\n                    ]) : null,\n                    vnode.attrs.namespaces.map(namespace => {\n                        return m('tr', [\n                            m('td', namespace.extension ? [\n                                m('span.FoF-Linguist-Coverage-Extension-Icon', {\n                                    style: namespace.extension.icon,\n                                }, namespace.extension.icon ? icon(namespace.extension.icon.name) : ''),\n                                m('span.FoF-Linguist-Coverage-Extension-Title', namespace.extension.extra['flarum-extension'].title),\n                            ] : [\n                                m('span.FoF-Linguist-Coverage-Extension-Icon.FoF-Linguist-Coverage-Namespace-Icon'),\n                                m('span.FoF-Linguist-Coverage-Extension-Title', namespaceLabel(namespace.namespace)),\n                            ]),\n                            this.columns === 'locale' ? localesAsArray().map(locale => m('td', this.localeCoverage(browseWithFilters, locale.key, namespace.namespace))) : [\n                                this.showAllFrontends ?\n                                    visibleFrontends.map(frontend => m('td', this.prefixCoverage(browseWithFilters, namespace.namespace, frontend))) : [\n                                        m('td', this.prefixCoverage(browseWithFilters, namespace.namespace, '_all_except_admin')),\n                                        m('td', this.prefixCoverage(browseWithFilters, namespace.namespace, 'admin')),\n                                    ],\n                            ],\n                        ]);\n                    }),\n                ]),\n            ]),\n        ];\n    }\n\n    prefixCoverage(browseWithFilters, namespace, frontend) {\n        if (!this.locale) {\n            return null;\n        }\n\n        return this.localeCoverage(browseWithFilters, this.locale, namespace, frontend);\n    }\n\n    localeCoverage(browseWithFilters, locale, namespace, frontend) {\n        const stringKeys = app.store.all('fof-linguist-string-key').filter(key => {\n            if (!namespace) {\n                return true;\n            }\n\n            const parts = key.key().split('.');\n\n            if (parts[0] !== namespace) {\n                return false;\n            }\n\n            if (frontend === '_all_except_admin') {\n                if (parts.length >= 2 && parts[1] === 'admin') {\n                    return false;\n                }\n            } else if (frontend && (parts.length < 2 || parts[1] !== frontend)) {\n                return false;\n            }\n\n            return true;\n        });\n\n        if (stringKeys.length === 0) {\n            return '-';\n        }\n\n        let customCount = 0;\n        let originalCount = 0;\n\n        stringKeys.forEach(stringKey => {\n            const customString = app.store.all('fof-linguist-string').find(\n                string => string.key() === stringKey.key() && string.locale() === locale\n            );\n\n            if (customString) {\n                customCount++;\n            } else if (stringKey.locales().hasOwnProperty(locale)) {\n                originalCount++;\n            }\n        });\n\n        const percent = Math.round(((customCount + originalCount) / stringKeys.length) * 100);\n\n        let specialStyle;\n\n        if (percent === 100) {\n            specialStyle = 'full';\n        } else if (percent < 5) {\n            specialStyle = 'low';\n        }\n\n        let label;\n\n        if (this.totalPercent) {\n            label = app.translator.trans('fof-linguist.admin.coverage.count.percent', {\n                percent: percent + '', // Keeps zero as string\n            });\n        } else {\n            label = app.translator.trans('fof-linguist.admin.coverage.count.total', {\n                translated: (customCount + originalCount) + '', // Keeps zero as string\n                total: stringKeys.length,\n            });\n        }\n\n        return m('.FoF-Linguist-Coverage-Progress-Wrap', [\n            m('.FoF-Linguist-Progress', {\n                className: specialStyle ? 'FoF-Linguist-Progress--' + specialStyle : '',\n            }, [\n                m('.FoF-Linguist-Progress-Bar', {\n                    style: {\n                        width: Math.max(percent, 5) + '%', // Always show the progress bar even if very close to 0\n                    },\n                }),\n                m('.FoF-Linguist-Progress-Label', label),\n                m('.FoF-Linguist-Progress-More', app.translator.trans('fof-linguist.admin.coverage.count.details', {\n                    total: stringKeys.length,\n                    original: originalCount + '', // Cast to string to preserve zero\n                    custom: customCount + '',\n                })),\n            ]),\n            Button.component({\n                icon: 'fas fa-filter',\n                className: 'Button Button--icon',\n                onclick: () => {\n                    const options = {\n                        missingTranslationsInLocales: [locale],\n                    };\n\n                    if (namespace) {\n                        options.forExtension = namespace;\n                    }\n\n                    if (frontend) {\n                        options.frontend = frontend;\n                    }\n\n                    browseWithFilters(options);\n                },\n                title: app.translator.trans('fof-linguist.admin.coverage.apply-missing-filter'),\n            }),\n        ]);\n    }\n}\n","import app from 'flarum/admin/app';\nimport Select from 'flarum/common/components/Select';\nimport Switch from 'flarum/common/components/Switch';\nimport LinkButton from 'flarum/common/components/LinkButton';\nimport localesAsArray from '../utils/localesAsArray';\nimport namespaceLabel from '../utils/namespaceLabel';\n\n/* global m */\n\nexport default class ExportPage {\n    oninit() {\n        this.locale = 'en';\n        this.namespace = null;\n        this.includeOriginals = false;\n        this.includeAll = false;\n        this.loading = false;\n        this.output = '';\n\n        this.fetchOutput();\n    }\n\n    view(vnode) {\n        const localeOptions = {};\n\n        localesAsArray().forEach(locale => {\n            localeOptions[locale.key] = locale.name + ' (' + locale.key + ')';\n        });\n\n        localeOptions.all = app.translator.trans('fof-linguist.admin.export.locale-all')\n\n        const namespaceOptions = {\n            _all: app.translator.trans('fof-linguist.admin.export.namespace-all'),\n        };\n\n        vnode.attrs.namespaces.forEach(namespace => {\n            if (namespace.extension) {\n                namespaceOptions[namespace.namespace] = namespace.extension.extra['flarum-extension'].title;\n            } else {\n                namespaceOptions[namespace.namespace] = namespaceLabel(namespace.namespace);\n\n            }\n        });\n\n        return [\n            m('h2', app.translator.trans('fof-linguist.admin.export.title')),\n            m('.Form-group', m('.Alert', app.translator.trans('fof-linguist.admin.export.warning'))),\n            m('.Form-group', [\n                m('label', app.translator.trans('fof-linguist.admin.export.locale')),\n                Select.component({\n                    options: localeOptions,\n                    value: this.locale,\n                    onchange: value => {\n                        this.locale = value;\n\n                        this.fetchOutput();\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans('fof-linguist.admin.export.namespace')),\n                Select.component({\n                    options: namespaceOptions,\n                    value: this.namespace === null ? '_all' : this.namespace,\n                    onchange: value => {\n                        this.namespace = value === '_all' ? null : value;\n\n                        this.fetchOutput();\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                Switch.component({\n                    state: this.includeOriginals,\n                    onchange: value => {\n                        this.includeOriginals = value;\n\n                        this.fetchOutput();\n                    }\n                }, app.translator.trans('fof-linguist.admin.export.include-originals')),\n            ]),\n            m('.Form-group', [\n                Switch.component({\n                    state: this.includeAll,\n                    onchange: value => {\n                        this.includeAll = value;\n\n                        this.fetchOutput();\n                    }\n                }, app.translator.trans('fof-linguist.admin.export.include-all')),\n            ]),\n            m('.Form-group', [\n                m('label', [\n                    app.translator.trans('fof-linguist.admin.export.output'),\n                    ' ',\n                    LinkButton.component({\n                        className: 'Button Button--primary',\n                        href: this.exportUrl(),\n                        external: true,\n                        // If a namespace is selected, we use it as filename (language pack convention)\n                        // otherwise we use the locale as filename (extension convention)\n                        download: (this.namespace || this.locale) + '.yml',\n                    }, app.translator.trans('fof-linguist.admin.export.download')),\n                ]),\n                m('textarea.FormControl.FoF-Export-Textarea', {\n                    readonly: true,\n                    value: this.output,\n                    rows: 10,\n                    placeholder: this.loading ? app.translator.trans('fof-linguist.admin.export.output-loading') : app.translator.trans('fof-linguist.admin.export.output-empty'),\n                }),\n            ]),\n        ];\n    }\n\n    exportUrl() {\n        return app.forum.attribute('apiUrl') + '/fof/linguist/export?' + m.buildQueryString({\n            locale: this.locale,\n            namespace: this.namespace,\n            includeOriginals: this.includeOriginals ? '1' : '0',\n            includeAll: this.includeAll ? '1' : '0',\n        });\n    }\n\n    fetchOutput() {\n        this.loading = true;\n        this.output = '';\n\n        app.request({\n            method: 'GET',\n            url: this.exportUrl(),\n            // Flarum doesn't support a raw to have the raw text response\n            // So we'll encode the response with JSON so Flarum can parse if afterwards\n            extract: raw => JSON.stringify(raw),\n        }).then(output => {\n            this.loading = false;\n            this.output = output;\n            m.redraw();\n        }).catch(error => {\n            this.loading = false;\n            m.redraw();\n            throw error;\n        });\n    }\n}\n","import app from 'flarum/admin/app';\nimport Button from 'flarum/common/components/Button';\nimport Select from 'flarum/common/components/Select';\nimport Switch from 'flarum/common/components/Switch';\nimport extractText from 'flarum/common/utils/extractText';\nimport localesAsArray from '../utils/localesAsArray';\n\n/* global m */\n\nexport default class ExportPage {\n    oninit() {\n        this.locale = 'en';\n        this.overrideExisting = true;\n        this.input = '';\n        this.loading = false;\n    }\n\n    view() {\n        const localeOptions = {};\n\n        localesAsArray().forEach(locale => {\n            localeOptions[locale.key] = locale.name + ' (' + locale.key + ')';\n        });\n\n        localeOptions.all = app.translator.trans('fof-linguist.admin.import.locale-all')\n\n        return [\n            m('h2', app.translator.trans('fof-linguist.admin.import.title')),\n            m('.Form-group', [\n                m('label', app.translator.trans('fof-linguist.admin.import.input')),\n                m('textarea.FormControl', {\n                    value: this.input,\n                    oninput: event => {\n                        this.input = event.target.value;\n                    },\n                    rows: 10,\n                    placeholder: app.translator.trans('fof-linguist.admin.import.input-placeholder'),\n                }),\n            ]),\n            m('.Form-group', [\n                m('label', app.translator.trans('fof-linguist.admin.import.locale')),\n                Select.component({\n                    options: localeOptions,\n                    value: this.locale,\n                    onchange: value => {\n                        this.locale = value;\n\n                        this.fetchOutput();\n                    },\n                }),\n            ]),\n            m('.Form-group', [\n                Switch.component({\n                    state: this.overrideExisting,\n                    onchange: value => {\n                        this.overrideExisting = value;\n                    }\n                }, app.translator.trans('fof-linguist.admin.import.override-existing')),\n            ]),\n            m('.Form-group', Button.component({\n                className: 'Button Button--primary',\n                onclick: () => {\n                    this.loading = true;\n\n                    app.request({\n                        method: 'POST',\n                        url: app.forum.attribute('apiUrl') + '/fof/linguist/import',\n                        body: {\n                            input: this.input,\n                            locale: this.locale,\n                            ignoreExisting: !this.overrideExisting,\n                        },\n                    }).then(data => {\n                        this.loading = false;\n                        m.redraw();\n\n                        if (confirm(extractText(app.translator.trans(this.overrideExisting ? 'fof-linguist.admin.import.results' : 'fof-linguist.admin.import.results-with-ignore', {\n                            imported: data.imported + '', // Cast to string to preserve zeros\n                            ignored: data.ignored + '',\n                            identical: data.identical + '',\n                        })))) {\n                            window.location.reload();\n                        }\n                    }).catch(error => {\n                        this.loading = false;\n                        m.redraw();\n                        throw error;\n                    });\n                },\n                disabled: this.loading || !this.input,\n                loading: this.loading,\n            }, app.translator.trans('fof-linguist.admin.import.submit'))),\n        ];\n    }\n}\n","import app from 'flarum/admin/app';\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\nimport StringsPage from './StringsPage';\nimport CoveragePage from './CoveragePage';\nimport ExportPage from './ExportPage';\nimport ImportPage from './ImportPage';\n\n/* global m */\n\nexport default class LinguistPage extends ExtensionPage {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        this.tab = 'strings';\n        this.ready = false;\n        this.namespaces = []; // First level of translation keys. Usually an extension ID, but also core and validation\n        this.frontends = [\n            'forum',\n            'admin',\n            'lib',\n            'ref',\n            'api',\n        ]; // Second level of translation keys: forum, admin, ...\n        this.initialBrowseFilters = {};\n\n        Promise.all([\n            app.request({\n                method: 'GET',\n                url: app.forum.attribute('apiUrl') + '/fof/linguist/strings',\n            }).then(result => {\n                app.store.pushPayload(result);\n            }),\n            app.request({\n                method: 'GET',\n                url: app.forum.attribute('apiUrl') + '/fof/linguist/string-keys',\n            }).then(result => {\n                const keys = app.store.pushPayload(result);\n\n                const namespaces = [];\n\n                keys.forEach(key => {\n                    const parts = key.key().split('.');\n\n                    const namespace = parts[0];\n\n                    if (['core', 'validation'].indexOf(namespace) === -1 && namespaces.indexOf(namespace) === -1) {\n                        namespaces.push(namespace);\n                    }\n\n                    if (parts.length > 1 && namespace !== 'validation') {\n                        const frontend = parts[1];\n\n                        if (this.frontends.indexOf(frontend) === -1) {\n                            this.frontends.push(frontend);\n                        }\n                    }\n                });\n\n                namespaces.sort();\n\n                this.namespaces = [\n                    {\n                        namespace: 'core',\n                    },\n                    {\n                        namespace: 'validation',\n                    },\n                    ...namespaces.map(namespace => {\n                        // First we look if the namespace matches an extension ID, that's the most common naming\n                        let extension = app.data.extensions[namespace];\n\n                        // If that's unsuccessful, we'll look if the full package name was used as namespace\n                        if (!extension) {\n                            extension = Object.values(app.data.extensions).find(extension => {\n                                const packageNameWithDash = extension.name.replace('/', '-');\n\n                                return namespace === packageNameWithDash;\n                            });\n                        }\n\n                        return {\n                            namespace,\n                            extension,\n                        };\n                    }),\n                ];\n            }),\n        ]).then(() => {\n            this.ready = true;\n            m.redraw();\n        });\n    }\n\n    content() {\n        return m('.ExtensionPage-settings', m('.container', [\n            this.contentTab(),\n        ]));\n    }\n\n    infoItems() {\n        const items = super.infoItems();\n\n        items.add('linguist-tabs', m('ul.FoF-Linguist-Tabs', [\n            m('li', m('a', {\n                className: this.tab === 'strings' ? 'active' : '',\n                onclick: () => {\n                    this.tab = 'strings';\n                },\n            }, app.translator.trans('fof-linguist.admin.tabs.strings'))),\n            m('li', m('a', {\n                className: this.tab === 'coverage' ? 'active' : '',\n                onclick: () => {\n                    this.tab = 'coverage';\n                },\n            }, app.translator.trans('fof-linguist.admin.tabs.coverage'))),\n            m('li', m('a', {\n                className: this.tab === 'export' ? 'active' : '',\n                onclick: () => {\n                    this.tab = 'export';\n                },\n            }, app.translator.trans('fof-linguist.admin.tabs.export'))),\n            m('li', m('a', {\n                className: this.tab === 'import' ? 'active' : '',\n                onclick: () => {\n                    this.tab = 'import';\n                },\n            }, app.translator.trans('fof-linguist.admin.tabs.import'))),\n        ]), 100);\n\n        return items;\n    }\n\n    contentTab() {\n        if (!this.ready) {\n            return LoadingIndicator.component();\n        }\n\n        switch (this.tab) {\n            case 'strings':\n                return m(StringsPage, {\n                    namespaces: this.namespaces,\n                    frontends: this.frontends,\n                    initialBrowseFilters: this.initialBrowseFilters,\n                });\n            case 'coverage':\n                return m(CoveragePage, {\n                    namespaces: this.namespaces,\n                    frontends: this.frontends,\n                    browseWithFilters: filters => {\n                        this.initialBrowseFilters = filters;\n                        this.tab = 'strings';\n                    },\n                });\n            case 'export':\n                return m(ExportPage, {\n                    namespaces: this.namespaces,\n                });\n            case 'import':\n                return m(ImportPage);\n        }\n\n        return null;\n    }\n}\n","import app from 'flarum/admin/app';\nimport StringKey from './models/StringKey';\nimport TextString from './models/TextString';\nimport LinguistPage from './pages/LinguistPage';\n\napp.initializers.add('fof-linguist', app => {\n    app.store.models['fof-linguist-string-key'] = StringKey;\n    app.store.models['fof-linguist-string'] = TextString;\n\n    app.extensionData.for('fof-linguist').registerPage(LinguistPage);\n});\n"],"sourceRoot":""}